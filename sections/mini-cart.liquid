
      <style>
      .mini-cart__drawer-footer .snap_emi_txt_minicart {display: none;}
      input:-webkit-autofill, input:-webkit-autofill:hover, input:-webkit-autofill:focus, input:-webkit-autofill:active {
        -webkit-box-shadow: 0 0 0 30px #ff000012 inset!important;
        -webkit-text-fill-color: #000!important;
    }
      .checkout-buttons-div {margin: 0;}
      .apply_coupon_spinner {
                    height: 20px !important;
        width: 20px !important;
        animation: rotate 0.8s infinite linear !important;
        border: 3px solid red !important;
        border-right-color: transparent !important;
        border-radius: 50% !important;
        margin-bottom: 5px !important;
        position: absolute !important;
        left: 22rem !important;
        right: 4rem !important;
        top: 1.8rem !important;
        display: block !important;
    }

      .total-cover {
                display: flex !important;
                justify-content: space-between;
                font-size: 12px;
                background: white;
                height: 52px;
                align-items: center;
                width: 100%;
    /*             margin: 0 auto; */
                margin-bottom: -20px;
            }

            .total-shipping {
                display: flex;
                justify-content: space-between;
                background: white;
                align-items: center;
                width: 100%;
    /*             margin-top: 10px; */
    /*             margin: 10px auto 10px; */
            }
      .totamou {
        font-size: 16px !important;
        color: black;
        margin: 0;
        font-weight: 600;
    }
    .coupon-d {
        color: #ff0000 !important;
        font-size: 15px !important;
        font-weight: 400 !important;
        display: flex;
        justify-content: center;
        align-items: center;
        margin: 0 !important;
    }
      .tam, .tam_p {
        font-size: 15px !important;
        color: black;
        margin: 0;
        font-weight: 700;
    }
            .total-am {
                display: none;
                justify-content: space-between;
                background: white;
                align-items: center;
                width: 100%;
                margin-top: 10px;
                margin-left: 0;
                margin: 0px auto 10px;
                font-weight: 700;
            }
      .discount-price {
                display: none;
                width: 100%;
                justify-content: space-between;
                align-items: center;
                margin: 11px auto 0;
            }
      .coupon-heading {
        font-size: 16px !important;
        font-weight: 800;
    }
      #coupon-code-text {
        border: none;
    /*     border-bottom: 1px solid #00000070; */
        width: 80%;
        font-size: 12px;
        background: transparent;
    /*     padding-bottom: 5px;
        padding-left: 0px; */
        color: #000;
    }
      #coupon-apply {
        background: transparent;
        color: black;
        border-radius: 100px;
        font-weight: 700;
    /*     border: 2px solid black; */
    /*     padding: 4px 16px; */
        font-size: 13px;
    }
    /*   #coupon-apply:hover {
            background: #ff0000;
        color: white;
        border: 2px solid #ff0000;
      } */
      .coupon-p {
        color: #ff0000 !important;
        font-size: 15px !important;
        font-weight: 600 !important;
        display: flex;
        justify-content: center;
        align-items: center;
        margin: 0 !important;
    }
      .shipping-title, .shipping-price {
        font-size: 15px !important;
        color: black;
        margin: 0;
        font-weight: 600;
    }
      #apply_coupon_overlay {
    /*             background: #ffffff; */
                height: 50%;
                width: 100%;
                z-index: 115000;
                top: 0;
                left: 0;
                text-align: center;
            }


      button.checkout-button.button.button--primary.button--full {
        background: #ff0000;
        padding: 0;
        border-radius: 4px;
        border: 2px solid;
        letter-spacing: normal;
    }
      #mini-cart .loader-button__text {
        text-transform: capitalize;
      }
      header.drawer__header {
        background: red;height: 40px;padding-left: 20px;color: #fff;
    }
     .drawer__title {
        margin-left: -12px;
    }
    #mini-cart .drawer__footer--bordered {
         box-shadow: 0 0px 10px #878787b8; /* We use box-shadow due to the shadow */
         padding-left: 12px;
         padding-right: 12px;
    }  
    /*     gokwick        */

    {% if settings.goEnable %}
    .gokwik-checkout {
/*         width: 48%; */
      margin-bottom: 10px;
    }
    .gokwik-checkout button {
        max-width: 100%;
        width: 100%;
        border: 1px solid transparent;
        display: flex;
        justify-content: center;
        align-items: center;
        background: red;
        position: relative;
        margin: 0;
        border-radius: 4px;
        padding: 0;
        text-align: center;
        height: 50px;
    }
    #gokwik-buy-now.disabled, .gokwik-disabled{
      opacity:0.5;
      cursor: not-allowed;
      }
      .gokwik-checkout button:focus {
      outline: none;
    }
    .gokwik-checkout button > span {
      display: flex;color: {{ settings.secClr }};
    }

    .gokwik-checkout button > span.btn-text > span:last-child {
        padding-top: 3px;
        font-size: 12px;
        line-height: 10px;
    }
    .gokwik-checkout button > span.btn-text > span:first-child {
        font-weight: 600;
        font-size: calc(var(--base-font-size) - 3px);
        text-transform: capitalize;
    }

    .gokwik-checkout button > span.pay-opt-icon img:first-child {
      margin-right: 10px;
      margin-left: 10px;
    }
    /* aditionl */

    {% endif %}
      
            
    .razorpay-checkout {
/*         width: 48%; */
      margin-bottom: 10px;
    }
    .razorpay-checkout button {
        max-width: 100%;
        width: 100%;
        border: 1px solid transparent;
        display: flex;
        justify-content: center;
        align-items: center;
        background: white;
        border: 2px solid red; 	
        position: relative;
        margin: 0;
        border-radius: 4px;
        padding: 0;
        text-align: center;
        height: 50px;
    }
    #razorpay-buy-now.disabled{
      opacity:0.5;
      cursor: not-allowed;
      }
      .razorpay-checkout button:focus {
      outline: none;
    }
    .razorpay-checkout button > span {
      display: flex;color: red;
    }

    .razorpay-checkout button > span.btn-text > span:last-child {
        padding-top: 3px;
        font-size: 12px;
        line-height: 10px;
    }
    .razorpay-checkout button > span.pay-opt-icon img:first-child {
      margin-right: 10px;
      margin-left: 10px;
    }


    {% if settings.goBuynowEnable %}
     #gokwik-buy-now {
       background: {{ settings.btnBClr }};
       width: 100%;
       color: {{ settings.btnTextClr }};
       cursor: pointer;
       line-height: 1;
       border: none;
       padding: 15px 10px;
       letter-spacing: .2em;
       font-size: 12px;
       margin-bottom:10px;
     }


    {% endif %}
    /* Loader CSS */
      #btn-loader{
        display: none;
        position: absolute;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
        justify-content: center;
        align-items: center;
        background:{{ settings.priClr }};
        border-radius:12px;
      } 

    .cir-loader,
    .cir-loader:after {
      border-radius: 50%;
      width: 35px;
      height: 35px;
    }
    .cir-loader {
      margin: 6px auto;
      font-size: 10px;
      position: relative;
      text-indent: -9999em;
      border-top: 0.5em solid rgba(255, 255, 255, 0.2);
      border-right: 0.5em solid rgba(255, 255, 255, 0.2);
      border-bottom: 0.5em solid rgba(255, 255, 255, 0.2);
      border-left: 0.5em solid #ffffff;
      -webkit-transform: translateZ(0);
      -ms-transform: translateZ(0);
      transform: translateZ(0);
      -webkit-animation: load8 1.1s infinite linear;
      animation: load8 1.1s infinite linear;
    }
    @-webkit-keyframes load8 {
      0% {
        -webkit-transform: rotate(0deg);
        transform: rotate(0deg);
      }
      100% {
        -webkit-transform: rotate(360deg);
        transform: rotate(360deg);
      }
    }
    @keyframes load8 {
      0% {
        -webkit-transform: rotate(0deg);
        transform: rotate(0deg);
      }
      100% {
        -webkit-transform: rotate(360deg);
        transform: rotate(360deg);
      }
    }
    </style>
    <script>
      function setCookie(name,value,days) {
      var expires = "";
      if (days) {
          var date = new Date();
          date.setTime(date.getTime() + (days*24*60*60*1000));
          expires = "; expires=" + date.toUTCString();
      }
          document.cookie = name + "=" + (value || "")  + expires + "; path=/";
      }
      function getCookie(name) {
          var nameEQ = name + "=";
          var ca = document.cookie.split(';');
          for(var i=0;i < ca.length;i++) {
              var c = ca[i];
              while (c.charAt(0)==' ') c = c.substring(1,c.length);
              if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);
          }
          return null;
      }
    </script>

    <cart-drawer section="{{ section.id }}" id="mini-cart" class="mini-cart drawer drawer--large">
      <span class="drawer__overlay"></span>

      <header class="drawer__header">
        <p class="drawer__title heading h6">
          Your Cart

         <span class="ms-3">( {%- if cart.item_count == 0 -%}
            {{- 'cart.general.title' | t -}}
          {%- else -%}
            {{- 'cart.general.item_count' | t: count: cart.item_count -}}
           {%- endif -%})</span>
          <input class="cart--count" value="{{cart.item_count}}" type="hidden">
        </p>

        <button type="button" class="drawer__close-button tap-area" data-action="close" title="{{ 'general.accessibility.close' | t | escape }}">
          {%- render 'icon' with 'close' -%}
        </button>
      </header>
    <div class="ribbon">{{section.settings.cart_announcement}}</div>
      {%- if cart.item_count == 0 -%}
        <div class="drawer__content drawer__content--center">
          <p>{{ 'cart.general.empty' | t }}</p>

          <div class="button-wrapper">
            <a href="{{ section.settings.empty_button_link }}" class="button button--primary">{{ 'cart.general.start_shopping' | t }}</a>
          </div>
        </div>
      {%- else -%}
        <div class="drawer__content">
          {%- if settings.cart_show_free_shipping_threshold and settings.cart_free_shipping_threshold != '' -%}
            {%- assign free_shipping_thresholds = settings.cart_free_shipping_threshold | remove: ' ' | split: ',' -%}
            {%- assign has_found_matching_threshold = false -%}

            {%- if free_shipping_thresholds.size > 1 -%}
              {%- for threshold in free_shipping_thresholds -%}
                {%- assign threshold_parts = threshold | split: ':' -%}
                {%- assign currency_code = threshold_parts | first | upcase -%}

                {%- if currency_code == cart.currency.iso_code -%}
                  {%- assign free_shipping_calculated_threshold = threshold_parts | last -%}
                  {%- assign has_found_matching_threshold = true -%}
                  {%- break -%}
                {%- endif -%}
              {%- endfor -%}
            {%- else -%}
              {%- assign free_shipping_calculated_threshold = free_shipping_thresholds | last -%}
              {%- assign has_found_matching_threshold = true -%}
            {%- endif -%}

            {%- if has_found_matching_threshold -%}
              {%- assign threshold_in_cents = free_shipping_calculated_threshold | times: 100 -%}

              <free-shipping-bar threshold="{{ threshold_in_cents }}" class="shipping-bar" style="--progress: {{ cart.total_price | times: 1.0 | divided_by: threshold_in_cents | at_most: 1 }}">
                {%- if cart.total_price >= threshold_in_cents -%}
                  <span class="shipping-bar__text text--small">{{ 'cart.general.free_shipping' | t }}</span>
                {%- else -%}
                  {%- capture remaining_amount -%}{{ cart.total_price | minus: threshold_in_cents | abs | money }}{%- endcapture -%}
                  <span class="shipping-bar__text text--small">{{ 'cart.general.free_shipping_remaining_html' | t: remaining_amount: remaining_amount }}</span>
                {%- endif -%}

                <span class="shipping-bar__progress"></span>
              </free-shipping-bar>
            {%- endif -%}
          {%- endif -%}

          <form id="mini-cart-form" action="{{ routes.cart_url }}" novalidate method="post">
            <input type="hidden" name="checkout">

            {%- for line_item in cart.items -%}
              <line-item class="line-item" data-item-id="{{ line_item.id }}">
                <div class="line-item__content-wrapper">
                  <a href="{{ line_item.url }}" class="line-item__image-wrapper" tabindex="-1" aria-hidden="true">
                    <span class="line-item__loader" hidden>
                      <span class="line-item__loader-spinner spinner" hidden>{% render 'icon' with 'spinner', width: 16, height: 16, stroke_width: 6 %}</span>
                      <span class="line-item__loader-mark" hidden>{% render 'icon' with 'check', width: 20, height: 20 %}</span>
                    </span>

                    <img class="line-item__image" loading="sizes" sizes="(max-width: 740px) 80px, 92px" {% render 'image-attributes', image: line_item.image, sizes: '80,92,160,184,240,276' %}>
                  </a>

                  {%- capture unit_price -%}
                    {%- if line_item.unit_price_measurement -%}
                      <div class="price text--subdued">
                        <div class="unit-price-measurement">
                          <span class="unit-price-measurement__price">{{ line_item.unit_price | money }}</span>
                          <span class="unit-price-measurement__separator">/</span>

                          {%- if line_item.unit_price_measurement.reference_value != 1 -%}
                            <span class="unit-price-measurement__reference-value">{{ line_item.unit_price_measurement.reference_value }}</span>
                          {%- endif -%}

                          <span class="unit-price-measurement__reference-unit">{{ line_item.unit_price_measurement.reference_unit }}</span>
                        </div>
                      </div>
                    {%- endif -%}
                  {%- endcapture -%}

                  {%- capture line_price -%}
                    {%- comment -%}
                    IMPLEMENTATION NOTE: The designer wanted to show the "compare at price" on cart. In case an automatic discount is applied
                      to a line item though, the "real" discount takes precedence over the compare at price
                    {%- endcomment -%}

                    <span class="price {% if line_item.original_line_price > line_item.final_line_price or line_item.final_line_price == 0 or line_item.variant.compare_at_price > line_item.variant.price %}price--highlight{% endif %}">
                      <span class="visually-hidden">{{ 'product.general.sale_price' | t }}</span>

                      {%- if line_item.final_line_price == 0 -%}
                        {{- 'cart.general.free' | t -}}
                      {%- else -%}
                        {{- line_item.final_line_price | money -}}
                      {%- endif -%}
                    </span>

                    {%- if line_item.original_line_price > line_item.final_line_price or line_item.variant.compare_at_price > line_item.variant.price -%}
                      <span class="price price--compare line-through">
                        <span class="visually-hidden">{{ 'product.general.regular_price' | t }}</span>

                        {%- if line_item.original_line_price > line_item.final_line_price -%}
                          {{- line_item.original_line_price | money -}}
                        {%- else -%}
                          {{- line_item.variant.compare_at_price | times: line_item.quantity | money -}}
                        {%- endif -%}
                      </span>
                    {%- endif -%}
                  {%- endcapture -%}

                  <div class="line-item__info">
                    <div class="product-item-meta">
                      {%- if settings.show_vendor -%}
                        {%- assign vendor_handle = line_item.vendor | handle -%}
                        {%- assign collection_for_vendor = collections[vendor_handle] -%}

                        {%- unless collection_for_vendor.empty? -%}
                          <a class="product-item-meta__vendor heading heading--xxsmall" href="{{ collection_for_vendor.url }}">{{ line_item.vendor }}</a>
                          {%- else -%}
                          <a class="product-item-meta__vendor heading heading--xxsmall" href="{{ line_item.vendor | url_for_vendor }}">{{ line_item.vendor }}</a>
                        {%- endunless -%}
                      {%- endif -%}

                      <a href="{{ line_item.url }}" data-product_id="{{line_item.product.id}}" data-product_type="{{line_item.product.type}}" class="product-item-meta__title text--small">
                        {{ line_item.product.title | split: "|" | first | split: "," | first }}</a>

                      {%- capture line_item_properties -%}
                        {%- unless line_item.product.has_only_default_variant -%}
                          <span class="product-item-meta__property text--subdued text--xsmall">{{ line_item.variant.option1 | camelcase  }}</span>
                        {%- endunless -%}

                        {%- if line_item.selling_plan_allocation -%}
                          <span class="product-item-meta__property text--subdued text--xsmall">{{ line_item.selling_plan_allocation.selling_plan.name }}</span>
                        {%- endif -%}

                      {% comment %}
                        {%- unless line_item.properties == blank -%}
                          <ul class="product-item-meta__property list--unstyled text--subdued text--xsmall" role="list">
                            {%- for property in line_item.properties -%}
                              {%- assign first_character_in_key = property.first | truncate: 1, '' -%}

                              {%- if property.last == blank or first_character_in_key == '_' -%}
                                {%- continue -%}
                              {%- endif -%}

                              <li class="{{ property.first }}">{{ property.first }}: {{ property.last }}</li>
                            {%- endfor -%}
                          </ul>
                        {%- endunless -%}
                      {% endcomment %}
                      {%- endcapture -%}



                      <div class="product-item-meta__price-list-container text--small">
                        <div class="price-list">
                          {{- line_price -}}
                          {{- unit_price -}}

                        </div>

                        {%- if unit_price != blank -%}
                          <div class="price-list hidden-phone">
                            {{- unit_price -}}
                          </div>
                        {%- endif -%}

                      </div>

                    </div>

                    {%- if line_item.line_level_discount_allocations != blank -%}
                      <ul class="line-item__discount-list list--unstyled" role="list">
                        {%- for discount_allocation in line_item.line_level_discount_allocations -%}
                          <li class="line-item__discount-badge discount-badge">
                            {%- render 'icon' with 'discount-badge' -%}{{ discount_allocation.discount_application.title }} (-{{ discount_allocation.amount | money }})
                          </li>
                        {%- endfor -%}
                      </ul>
                    {%- endif -%}

                    {%- assign max_allowed_quantity = '' -%}
                    {%- assign allow_more = true -%}

                    {%- if line_item.variant.inventory_management == 'shopify' and line_item.variant.inventory_policy == 'deny' and line_item.variant.inventory_quantity <= line_item.quantity -%}
                      {%- assign max_allowed_quantity = line_item.variant.inventory_quantity -%}
                      {%- assign allow_more = false -%}
                    {%- endif -%}

                    <line-item-quantity class="line-item__quantity">
                      <div class="quantity-selector quantity-selector--small">
                        <a href="{{ routes.cart_change_url }}?quantity={{ line_item.quantity | minus: 1 }}&line={{ forloop.index }}" class="quantity-selector__button" aria-label="{{ 'cart.general.decrease_quantity' | t | escape }}" data-no-instant>
                          {%- render 'icon' with 'minus' -%}
                        </a>

                        <input is="input-number" readonly class="quantity-selector__input text--xsmall" autocomplete="off" type="text" inputmode="numeric" name="updates[]" data-line="{{ forloop.index }}" value="{{ line_item.quantity }}" {% if max_allowed_quantity != '' %}max="{{ max_allowed_quantity }}"{% else %}max=""{% endif %} size="{{ line_item.quantity | append: '' | size | at_least: 2 }}" aria-label="{{ 'cart.general.change_quantity' | t | escape }}">
                        {%- if line_item.product.metafields.set.quantity_limit == 1 -%}
                          <a href="{{ routes.cart_change_url }}?quantity={{ line_item.quantity | plus: 1 }}&line={{ forloop.index }}" class="quantity-selector__button {% if line_item.quantity > 0 %}unusable{% endif %}" aria-label="{{ 'cart.general.increase_quantity' | t | escape }}" data-no-instant>
                            {%- render 'icon' with 'plus' -%}
                          </a>
                        {%- elsif line_item.product.metafields.set.quantity_limit == 2 -%}
                          <a href="{{ routes.cart_change_url }}?quantity={{ line_item.quantity | plus: 1 }}&line={{ forloop.index }}" class="quantity-selector__button {% if line_item.quantity > 1 %}unusable{% endif %}" aria-label="{{ 'cart.general.increase_quantity' | t | escape }}" data-no-instant>
                            {%- render 'icon' with 'plus' -%}
                          </a>
                        {%- elsif line_item.product.metafields.set.quantity_limit == 3 -%}
                          <a href="{{ routes.cart_change_url }}?quantity={{ line_item.quantity | plus: 1 }}&line={{ forloop.index }}" class="quantity-selector__button {% if line_item.quantity > 2 %}unusable{% endif %}" aria-label="{{ 'cart.general.increase_quantity' | t | escape }}" data-no-instant>
                            {%- render 'icon' with 'plus' -%}
                          </a>
                        {%- elsif line_item.product.metafields.set.quantity_limit == 4 -%}
                          <a href="{{ routes.cart_change_url }}?quantity={{ line_item.quantity | plus: 1 }}&line={{ forloop.index }}" class="quantity-selector__button {% if line_item.quantity > 3 %}unusable{% endif %}" aria-label="{{ 'cart.general.increase_quantity' | t | escape }}" data-no-instant>
                            {%- render 'icon' with 'plus' -%}
                          </a>
                        {%- elsif line_item.product.metafields.set.quantity_limit == 5 -%}
                          <a href="{{ routes.cart_change_url }}?quantity={{ line_item.quantity | plus: 1 }}&line={{ forloop.index }}" class="quantity-selector__button {% if line_item.quantity > 4 %}unusable{% endif %}" aria-label="{{ 'cart.general.increase_quantity' | t | escape }}" data-no-instant>
                            {%- render 'icon' with 'plus' -%}
                          </a>
                        {%- elsif line_item.product.metafields.set.quantity_limit == 6 -%}
                          <a href="{{ routes.cart_change_url }}?quantity={{ line_item.quantity | plus: 1 }}&line={{ forloop.index }}" class="quantity-selector__button {% if line_item.quantity > 5 %}unusable{% endif %}" aria-label="{{ 'cart.general.increase_quantity' | t | escape }}" data-no-instant>
                            {%- render 'icon' with 'plus' -%}
                          </a>
                        {% else %}
                          {%- if allow_more -%}
                            <a href="{{ routes.cart_change_url }}?quantity={{ line_item.quantity | plus: 1 }}&line={{ forloop.index }}" class="quantity-selector__button {% if line_item.quantity > 6 %}unusable{% endif %}" aria-label="{{ 'cart.general.increase_quantity' | t | escape }}" data-no-instant>
                              {%- render 'icon' with 'plus' -%}
                            </a>

                          {%- else -%}
                            <span class="quantity-selector__button" aria-label="{{ 'cart.general.no_more_stock' | t | escape }}" data-tooltip="{{ 'cart.general.no_more_stock' | t | escape }}">
                              {%- render 'icon' with 'plus' -%}
                            </span>
                          {%- endif -%}
                        {%- endif -%}
                      {%- if line_item_properties != blank -%}
                        <div class="product-item-meta__property-list">
                          {{- line_item_properties -}}
                        </div>
                      {%- endif -%}
                      </div>
                      <a href="{{ line_item.url_to_remove }}" class="line-item__remove-button link text--subdued text--xxsmall" data-no-instant><img width="16px;" src="https://cdn.shopify.com/s/files/1/0057/8938/4802/files/Group_1_93145e45-8530-46aa-9fb8-6768cc3d80d2.png?v=1633783107"></a>                 
                    </line-item-quantity>
                    {% if line_item.product.metafields.set.quantity_limit == 1 and line_item.quantity > 1 %}
                        <small class="qty-error-msg text-red mt-2">Not more than 1 unit are allowed for this item.</small>
                    {% elsif line_item.product.metafields.set.quantity_limit == 2 and line_item.quantity > 2 %}
                        <small class="qty-error-msg text-red mt-2">Not more than 2 units are allowed for this item.</small>
                    {% elsif line_item.product.metafields.set.quantity_limit == 3 and line_item.quantity > 3 %}
                        <small class="qty-error-msg text-red mt-2">Not more than 3 units are allowed for this item.</small>
                    {% elsif line_item.product.metafields.set.quantity_limit == 4 and line_item.quantity > 4 %}
                        <small class="qty-error-msg text-red mt-2">Not more than 4 units are allowed for this item.</small>
                    {% elsif line_item.product.metafields.set.quantity_limit == 5 and line_item.quantity > 5 %}
                        <small class="qty-error-msg text-red mt-2">Not more than 5 units are allowed for this item.</small>
                    {% elsif line_item.product.metafields.set.quantity_limit == 6 and line_item.quantity > 6 %}
                        <small class="qty-error-msg text-red mt-2">Not more than 6 units are allowed for this item.</small>
                    {% else %}
                      {% if line_item.quantity > 6 %}
                        <small class="qty-error-msg text-red mt-2">Not more than 7 units are allowed for this item.</small>
                      {% endif %}  
                    {% endif %}
                  </div>
                </div>

                {% if line_item.product.variants.size > 1 %}
                    <p class="margin visually-hidden">More than one variants.</p>
                {% endif %}

                <select name="updates[]" data-product-id="{{line_item.product.id}}" class="edit-cart visually-hidden">
                  {% for variant in line_item.product.variants %}
                  <option id="{{variant.id}}" value="{{variant.id}}" {% if variant.inventory_quantity == 0 %}disabled{% endif %}>{{variant.option1}}</option>
                  {% endfor %}
                </select>
              </line-item>
            {%- endfor -%}
          </form>
        {% render 'freebie-cart_gift' %} 



           {%- if section.settings.show_recommendations -%}
            <cart-drawer-recommendations section-id="{{ section.id }}" product-id="{{ cart.items.first.product_id }}" class="mini-cart__recommendations">
              {%- assign acceptable_recommendations_count = 0 -%}

              {%- for product in recommendations.products -%}
         
                {%- assign matching_product = cart.items | where: 'product_id', product.id | first -%}

                {%- if matching_product == blank -%}
                  {%- assign acceptable_recommendations_count = acceptable_recommendations_count | plus: 1 -%}
                {%- endif -%}
    
              {%- endfor -%}

              {%- if recommendations.performed -%}
                {%- if acceptable_recommendations_count > 0 -%}
                  <div class="mini-cart__recommendations-inner">
                    {%- if section.settings.recommendations_title != blank -%}
                      <p class="mini-cart__recommendations-heading heading heading--small hidden-pocket">{{ section.settings.recommendations_title | escape }}</p>
                      <p class="mini-cart__recommendations-heading heading heading--xsmall text--subdued hidden-lap-and-up">{{ section.settings.recommendations_title | escape }}</p>
                    {%- endif -%}

                    <div class="scroller">
                      <div class="scroller__inner">
                        <div class="mini-cart__recommendations-list">
                          {%- assign shown_products_count = 0 -%}

                          {%- for product in collections['gift-box'].products -%}
            
                            {%- if shown_products_count >= 6 -%}
                              {%- break -%}
                            {%- endif -%}

                            {%- assign matching_product = cart.items | where: 'product_id', product.id -%}

                            {%- if matching_product.size == 0 -%}
            
                              {%- assign shown_products_count = shown_products_count | plus: 1 -%}
                              {%- render 'product-item', product: product, reduced_content: true, reduced_font_size: true, hide_secondary_image: true, sizes_attribute: '(max-width: 740px) 65px, 92px' -%}
                            {%- endif -%}
               
                          {%- endfor -%}
                        </div>
                      </div>
                    </div>
                  </div>
                {%- endif -%}
              {%- else -%}
                <div class="mini-cart__recommendations-inner">
                  <div class="spinner">
                    {%- render 'icon' with 'spinner', stroke_width: 3, width: 40, height: 40 -%}
                  </div>
                </div>
              {%- endif -%}
            </cart-drawer-recommendations>
          {%- endif -%}
       
        </div>
           <div class="d-flex align-items-center">
<style>
/* for label giftcard/gst */
.contain {
  display: block;
  position: relative;
  padding-inline: 35px;
  margin: 12px;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* Hide the browser's default checkbox */
.contain input {
position: absolute;
opacity: 0;
cursor: pointer;
height: 0;
width: 0;
}

/* Create a custom checkbox */
.checkmark {
position: absolute;
top: 0;
left: 0;
height: 20px;
width: 20px;
background-color: #ccc;
}

/* On mouse-over, add a grey background color */
.contain:hover input ~ .checkmark {
background-color: #9c9c9c;
}

/* When the checkbox is checked, add a blue background */
.contain input:checked ~ .checkmark {
background-color: red;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
content: "";
position: absolute;
display: none;
}

/* Show the checkmark when checked */
.contain input:checked ~ .checkmark:after {
display: block;
}

/* Style the checkmark/indicator */
.contain .checkmark:after {
  left: 8px;
  top: 4px;
  width: 5px;
  height: 10px;
  border: solid white;
  border-width: 0 3px 3px 0;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
}
</style>
<!-- <label class="contain">PAY VIA GIFT CARDS 
<input type="checkbox" id="gstbill" class="mx-3" onclick="giftcardcheck()" >
<span class="checkmark"></span>
</label> -->
        </div>
        <footer class="mini-cart__drawer-footer drawer__footer drawer__footer--tight drawer__footer--bordered">

        <div class="mini-cart__gst">
        <div class="gst-container">
      <label class="check_container">
        {%- comment -%}Get GST Invoice
        <svg xmlns="http://www.w3.org/2000/svg" version="1" width="20" height="20" viewBox="0 0 20 20"><path fill="black" d="M10 0C4.483 0 0 4.483 0 10s4.483 10 10 10 10-4.483 10-10S15.517 0 10 0zm0 18c-4.417 0-8-3.583-8-8s3.583-8 8-8 8 3.583 8 8-3.583 8-8 8zM9.833 5.75c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm0 1.067l.983 1v6.1H12.3v2H9.8l-.983-.967V8.817H7.483v-2h2.35z"/></svg>
        {%- endcomment -%}
        <input type="checkbox">
          <span class="checkmark"></span>
            Pay Via Gift Cards 
      </label>
        {%- comment -%}<div class="gst-icon-detail">
          <p>Billing name & billing address on invoice will be the name & principal place of business address registered with GST portal. Shipping name & shipping address can be changed to your choice.</p>
        </div>{%- endcomment -%}
        </div>
      </div> 
      <div class="mini-cart_footer_container">
          {%- capture shipping_tax_note -%}{{ 'cart.general.shipping_tax_note' | t }}{%- endcapture -%}
          {% comment %}
          <div class="cart-coupon visually-hidden">
            <div class="coupon-text">
              <img src="https://cdn.shopify.com/s/files/1/0057/8938/4802/files/coupon-code_1.png?v=1650373547" />
              <div id="discount-code" style="display: flex; border: 2px dotted #00000070; border-radius: 100px; height: 2.5rem; width: 82%; padding-left: 1rem;background: #ff000012;">
                <input type="text" id="coupon-code-text" placeholder="Discount Code">
                <input type="submit" value="Apply" id="coupon-apply" onclick=handleapplyclick()>
              </div>
            </div>
            {%comment%}
            {% for block in section.blocks %}
            {% case block.type %}
            {% when 'available-offers' %}
            <h4 class="avai-coupons">AVAILABLE COUPONS</h4>

            {%break%}
            {% endcase %}
            {%endfor%}
            {%endcomment%}
            <div class="available-offers">
              <form name="offer-coupons" id="offer-coupons">
                {% for block in section.blocks %}
                {% case block.type %}
                {% when 'available-offers' %}
                <style>
                  .available-offers {
                    display: block
                  }
                </style>
                <div class="select-coupon">
                  <input type="radio" name="available-offers" id="{{block.settings.offer}}"
                         value="{{block.settings.offer}}">
                  <label for="{{block.settings.offer}}">
                    <div class="offer-body" {{ block.shopify_attributes }}>
                      <div class="code-details">
                        <div class="code_cou">{{block.settings.offer}}</div>
                        <div class="code_usp">{{block.settings.offer-usp}}</div>
                      </div>
                      <p class="code-desc">{{block.settings.offer-details}}</p>
                    </div>
                  </label><br>
                </div>
                {% endcase %}
                {%endfor%}
              </form>
            </div>
          </div> 
          {% endcomment %}
          <div class="discount-price">
            <p class="coupon-d">Coupon Discount</p>
            <p class="coupon-p">Rs 0</p>
          </div>
          <div class="total-shipping">
            <h4 class="shipping-title">Shipping: </h4>
            <h4 class="shipping-price" style="margin: 0;font-size: 16px;">FREE</h4>
          </div>
          <div class="total-am">
            <h4 class="tam">Total Amount: </h4>
            <h4 class="tam_p" style="margin: 0;font-size: 16px;">{{- cart.total_price | money_with_currency -}}</h4>
          </div>
          {%- if cart.cart_level_discount_applications != blank -%}
            <ul class="mini-cart__discount-list list--unstyled" role="list">
              {%- for discount_application in cart.cart_level_discount_applications -%}
                <li class="mini-cart__discount">
                  <span class="mini-cart__discount-badge discount-badge">{%- render 'icon' with 'discount-badge' -%}{{ discount_application.title }}</span>
                  <span class="mini-cart__discount-price text--xsmall text--subdued">-{{ discount_application.total_allocated_amount | money }}</span>
                </li>
              {%- endfor -%}
            </ul>
          {%- endif -%}
          {%- comment -%}
          {%- if section.settings.show_order_note or shipping_tax_note != '' -%}
            <div class="mini-cart__actions text--subdued text--xsmall">
              {%- if section.settings.show_order_note -%}
                <button type="button" is="toggle-button" id="order-note-toggle" class="link" data-action="toggle-order-note" aria-controls="mini-cart-note" aria-expanded="false">
                  {%- if cart.note == blank -%}
                    {{- 'cart.general.add_order_note' | t -}}
                  {%- else -%}
                    {{- 'cart.general.edit_order_note' | t -}}
                  {%- endif -%}
                </button>
              {%- endif -%}

              {%- if shipping_tax_note != '' -%}
                <span>{{ shipping_tax_note }}</span>
              {%- endif -%}
            </div>
          {%- endif -%}
          {%- endcomment -%}
          <div class="d-flex justify-content-between">
            <span class="cart-total pb-2"> <b>Total:</b></span>
            <input class="cart-total" value="{{cart.total_price | divided_by: 100}}" type="hidden">
            <span class="cart-total-text"><b>{{- cart.total_price | money_with_currency -}}</b></span>
          </div>

      {%- if section.settings.show_checkout_button -%}
            {% if cart.total_price <= 4700000 %}
                {%- assign magic_ok = true -%}
                {%- assign only_gk = false -%}
                {%- assign is_validation_ok = true -%}
                {%- assign qty_error_msg = 'Please Modify your cart to proceed.' -%}
                {%- assign product_limit_ok = true -%}
          {%- assign product_flash = false -%}
                {% for line_item in cart.items %}
          {% if line_item.product.tags contains 'prebooking' %} 
             {%- assign magic_ok = false -%}
          {% endif %}
          {% if line_item.product.tags contains 'flash-sale' %}
            {%- assign product_flash = true -%}
          {% endif %}
          {% if line_item.product.tags contains 'GK-Only' %}
            {%- assign only_gk = true -%}
          {% endif %}
          
                    {% if line_item.product.metafields.set.quantity_limit == 1 and line_item.quantity > 1 %}
                        {%- assign product_limit_ok = false -%}
                    {% endif %}
                    {%- if line_item.product.metafields.set.quantity_limit == 2 and line_item.quantity > 2 -%}
                        {%- assign product_limit_ok = false -%}
                    {% endif %}
                    {%- if line_item.product.metafields.set.quantity_limit == 3 and line_item.quantity > 3 -%}
                        {%- assign product_limit_ok = false -%}
                    {% endif %}
                    {%- if line_item.product.metafields.set.quantity_limit == 4 and line_item.quantity > 4 -%}
                        {%- assign product_limit_ok = false -%}
                    {% endif %}
                    {%- if line_item.product.metafields.set.quantity_limit == 5 and line_item.quantity > 5 -%}
                        {%- assign product_limit_ok = false -%}
                    {% endif %}
                    {%- if line_item.product.metafields.set.quantity_limit == 6 and line_item.quantity > 6 -%}
                        {%- assign product_limit_ok = false -%}
                    {% endif %}
                   {% if line_item.quantity > 7 %}
                        {%- assign is_validation_ok = false -%}
                    {% endif %}
                {% endfor %}
                <p class="text-center">
                  <button type="button" style="color:#ff0000;" class=" tap-area" data-action="close" title="{{ 'general.accessibility.close' | t | escape }}">
                      Continue Shopping  {% render 'icon' with 'product-tab-right' %}
                  </button>
                </p>
                <div class="mini-cart_footer">
                {% if is_validation_ok == true and product_limit_ok == true and only_gk == true %}
                    <div class=" checkout-buttons-div">
                      {% render 'only-gokwik' %}
                    </div>
                {% elsif is_validation_ok == true and product_limit_ok == true and only_gk == false %}
                  <div class=" checkout-buttons-div">
                    {% render 'gokwik-checkout' %}
                    <!-- 						<button is="loader-button" onclick="shopifyCheckout()" form="mini-cart-form" type="submit" class="checkout-button button button--primary button--full" name="checkout">
                    Pay Via Card  </button> -->
                    {%- if magic_ok == true -%}               
                      <div class="razorpay-checkout">
                        <button type="button" onclick="openRzpCheckout(event)">
                                  <span class="btn-text">
                                      <span>PAY VIA CARD/OTHERS</span>
                                      <span></span>
                                  </span>
                        </button>
                      </div>
                    {%- endif -%}   
                    <!-- <button is="loader-button" style="display:none;" onclick="shopifyCheckout()" form="mini-cart-form" type="submit" class="checkout-button button button--primary button--full" name="checkout">
                    checkout
                    </button> -->
                  </div>
                {% else %}
                    <p class="cart-val-error" style="margin-bottom: 12px !important">{{- qty_error_msg -}}</p>
                {% endif %}
            {%- else -%}
                    <p class="cart-val-error" style="margin-bottom: 12px !important">Your cart value should be less than <strong>Rs.47000/-!</strong> Modify your cart to proceed.</p>
            {% endif %}
          {%- else -%}
            <a href="{{ routes.cart_url }}" class="button button--primary button--full" data-no-instant>{{ 'cart.general.go_to_cart' | t }}</a>
          {%- endif -%}

        </div>
      </div>
        </footer>
      {%- endif -%}

      {%- if section.settings.show_order_note -%}
        <openable-element id="mini-cart-note" class="mini-cart__order-note">
          <span class="openable__overlay"></span>
          <label for="cart[note]" class="mini-cart__order-note-title heading heading--xsmall">{{- 'cart.general.add_order_note' | t -}}</label>
          <textarea is="cart-note" name="note" id="cart[note]" rows="3" aria-owns="order-note-toggle" class="input__field input__field--textarea" placeholder="{{ 'cart.general.order_note_placeholder' | t }}">{{ cart.note }}</textarea>
          <button type="button" data-action="close" class="form__submit form__submit--closer button button--secondary">{{ 'cart.general.order_note_save' | t }}</button>
        </openable-element>
      {%- endif -%}
    </cart-drawer>

    <script>
      // giftcard || gst
    function giftcardcheck(){        
     $('.checkout-button').toggleClass("d-block");
     $('.gokwik-checkout, .razorpay-checkout').toggleClass("d-none");
    }
    $(window).on("load", function() {
      if ($("input#gstbill").is(":checked")){
          $('.checkout-button').toggleClass("d-block");
          $('.gokwik-checkout, .razorpay-checkout').toggleClass("d-none");
      }   
    })
    // end giftcard || gst 
</script>
<!--       freebie-offer -->
{% assign gift-product = collections['freebie-offer'].products[0] %}
{% assign gift-product_variant = gift-product.variants[0].id %}
<script>
let giftId = "{{ gift-product_variant }}";
if(document.readyState === 'loading') {console.log("loading");$(".header__icon-list").css("pointer-events", "none");}

$(window).on("load", function(){$(".header__icon-list").css("pointer-events", "auto");
 // $('.custom-gift-button')[0] ? $('.custom-gift-button')[0].click() : '';
 var cartItem;
 var onloadfreeqnty = 0;
 jQuery.getJSON('/cart.js', function(cart) {
  cartItem = cart.items;
   let onloadfreeItems = cartItem.filter(item => item.properties && item.properties.Free);
   $(onloadfreeItems).each(function(ind, el){
    onloadfreeqnty += el.quantity;
   })
   console.log("onloadfreeqnty", onloadfreeqnty)
 })

 document.addEventListener('cart:updated', function(event) {
   let cart = event.detail.cart.items; // Get the updated content of the cart
   // console.log(cart)
   let updatedqnty = 0;
   let updatedfreeitems = cart.filter(item => item.properties && item.properties.Free);
   $(updatedfreeitems).each(function(ind, el){
    updatedqnty += el.quantity;
   })
   console.log("onloadfreeqnty", onloadfreeqnty, "updatedqnty",updatedqnty)
   if(updatedqnty > onloadfreeqnty) {
    console.log("add free product");
    let myTimeout = setTimeout(function(){
      clearTimeout(myTimeout);
    $('.custom-gift-button')[0] ? $('.custom-gift-button')[0].click() : '';
    },300)
    onloadfreeqnty += 1;
   }else if (updatedqnty < onloadfreeqnty){
    console.log("remove free product");
    $('#mini-cart-form .line-item').each(function() {
      let dataItemId = $(this).data('item-id');
      if (dataItemId == giftId){
       // $(`.line-item[data-item-id="${dataItemId}"] a.quantity-selector__button[aria-label="Decrease quantity"]`)[0].click();
        let myTimeout = setTimeout(function(){
         clearTimeout(myTimeout);
         $(`.line-item[data-item-id="${dataItemId}"] a.line-item__remove-button`)[0].click();
        },900)
      }
    });
     onloadfreeqnty -= 1;
    }else{
     console.log("no change");
    }
 });
})

$(document).ready(function(){
const targNode = document.getElementById('mini-cart');
const config_ = { attributes: false, childList: true, subtree: false };
const callback_ = (mutationList, observer) => {
for (const mutation of mutationList) {
//  console.log("mutation")
  // let total_price = parseInt($('.mini-cart__drawer-footer .cart-total-text')[0].textContent.replace( /^\D+/g, '' ).replace(/,/g,"").slice(0,-3));
  // console.log('price',total_price);
 // if ($('.custom-gift-button').length > 0) {
  //  $('.custom-gift-button')[0].click();
  //}
 
 $('#mini-cart-form .line-item').each(function() {
   let dataItemId = $(this).data('item-id');
   if (dataItemId == giftId){
     // let remove_price = $(`.line-item[data-item-id="${dataItemId}"] .price.price--highlight`).text().replace( /^\D+/g, '' ).replace(/,/g,"").slice(0,-3);
      $(`.line-item[data-item-id="${dataItemId}"] ul, .line-item[data-item-id="${dataItemId}"] span.price.price--compare.line-through`).each(function() {$(this).css("display", "none") })
       //   if(total_price - remove_price < 1000) {
       //    $(`.line-item[data-item-id="${dataItemId}"] a.line-item__remove-button`)[0].click();
       //   }
   }
 });
}
};
const observer_ = new MutationObserver(callback_);
observer_.observe(targNode, config_);

{%- comment -%} const customer_id = "{{customer.id}}"
 $('#mini-cart-form .line-item').each(function() {
  let dataItemId = $(this).data('item-id');
    if (dataItemId == giftId){
          if(customer_id.trim().length == 0) {
           $(`.line-item[data-item-id="${dataItemId}"] a.line-item__remove-button`)[0].click();
          }
      }
}); {%- endcomment -%}

});
</script>
          <script>
        function handleapplyclick(){
            applyCoupon();
            $('#coupon-apply').before(`<div id="apply_coupon_overlay" style="display:none;">
      <div class="apply_coupon_spinner"></div>
        </div>`)

            $("#apply_coupon_overlay").fadeIn();
            $('#coupon-apply').hide();
            setTimeout(function () {$('#coupon-code-text').val()==''; $("#apply_coupon_overlay").remove(); $('#coupon-apply').fadeIn(); }, 3000);
            let couponCode = $('#coupon-code-text').val();
            let discountAmount = $(this).closest('.coupon-text').closest('.cart-coupon').siblings('.discount-price').find('.coupon-p').text();
            //             setTimeout(function () {if (couponCode) {
            //                 clevertap.event.push("Discount Code Applied", {
            //                     "Discounted Amount": discountAmount,
            //                     "Discount Code": couponCode,
            //                     "source": 'Cart Drawer'
            //                 });
            //                 console.log('Sheena' + discountAmount)
            //             }
            //                                     }, 5000)
          }
        $(".razorpay-checkout").click(function () {
           let productsincart = line_item.product;
         clevertap.event.push("razor/magic Button Clicked",{
         "cart products": productsincart,
         "Amount": cart_total_price
     });
  });
</script>
    <script>
      setInterval(function(){
        if($('#apply_coupon_overlay').css("opacity")!='1'){
          if($('#coupon-code-text').val()=='' ) {
            $('#coupon-apply').hide();
          }

          else {
            $('#coupon-apply').show()
          }
        }
        else{
          $('#coupon-apply').hide()
        }
      },100)
      
    </script>

    {% schema %}
    {
      "name": "Cart drawer",
      "class": "shopify-section--mini-cart",
      "settings": [
        {
          "type": "paragraph",
          "content": "Free shipping notice can be configured in global cart settings."
        },
        {
          "type": "html",
          "id": "cart_announcement",
          "label": "announcement",
          "default": "Free Shipping, COD Available"
        },
        {
          "type": "checkbox",
          "id": "show_order_note",
          "label": "Show order note",
          "default": true
        },
        {
          "type": "checkbox",
          "id": "show_checkout_button",
          "label": "Show checkout button",
          "default": true
        },
        {
          "type": "url",
          "id": "empty_button_link",
          "label": "Empty button link",
          "default": "/collections/all"
        },
        {
          "type": "header",
          "content": "Cross-sell",
          "info": "Dynamic recommendations are based on the items in your cart. They change and improve with time. [Learn more](https://help.shopify.com/en/themes/development/recommended-products)"
        },
        {
          "type": "checkbox",
          "id": "show_recommendations",
          "label": "Show cart recommendations",
          "default": true
        },
        {
          "type": "text",
          "id": "recommendations_title",
          "label": "Recommendations heading",
          "default": "You may also like"
        }
      ]
    }
    {% endschema %}