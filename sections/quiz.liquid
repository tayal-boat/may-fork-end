	<style>
.question-container{
    margin: 10px auto;
    padding: 5px;
    width: 80vw;
    background-color: #c7dddf;
    text-align: center;
}
.option-container{
    display: flex;
    justify-content: space-around;
    margin: 10px auto;
    padding: 5px;
    width: 90vw;    flex-wrap: wrap;
}
.option:hover{
	background-color: lightskyblue;
}

.previous, .next{	padding: 5px;}
.previous, .next{color: white;background-color: #BF3325;}
button.option {
    display: flex;
    flex-direction: column;
    align-items: center;width:50%;
}
@media(min-width:1024px){ button.option {width:25%;}}
        </style>

    {% comment %} <div id="custom-saleModal" class="modal fade" role="dialog">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-body p-0">
        <button type="button" class="close" data-dismiss="modal">&times;</button>
        <div class="modal-body-content"> {% endcomment %}
	<div class="panel">

		<div class="question-container" id="question">
			Question goes here.
		</div>
		<div class="option-container">
			<button class="option" onclick="" id="op1" >option1</button>
	
			<button class="option" id="op2" >option2</button>
	
			<button class="option" id="op3">option3</button>
	
			<button class="option" id="op4">option4</button>
		</div>
		<div class="navigation">
            <button class="previous d-none">previous</button>
            <button class="submit d-none">submit</button>
		</div>
	</div>
    {% comment %} </div>
    </div>
  </div>
</div>
</div> {% endcomment %}
<script>
// Questions will be asked
const Questions = [ 
    {
    id: 0,
    q: {{- section.settings.quiz_text | split: '1:' | first -}},
    a: [
        { text: `
        {{- section.settings.quiz_text | split: '2:' | first | split: '1:' | last -}}
        `},
        { text: `
        {{- section.settings.quiz_text | split: '3:' | first | split: '2:' | last -}}
        ` },
        { text: `
        {{- section.settings.quiz_text | split: '4:' | first | split: '3:' | last -}}
        ` },
        { text: `
        {{- section.settings.quiz_text | split: '4:' | last -}}
        ` }
    ]
    },

    {
    id: 1,
    q: {{- section.settings.quiz_text1 | split: '1:' | first -}},
    a: [
        { text: `
        {{- section.settings.quiz_text1 | split: '2:' | first | split: '1:' | last -}},
        `, isCorrect: "a"},
        { text: `
        {{- section.settings.quiz_text1 | split: '3:' | first | split: '2:' | last -}}
        `,  isCorrect: "b" },
        { text: `
        {{- section.settings.quiz_text1 | split: '4:' | first | split: '3:' | last -}}
        `,  isCorrect: "c" },
        { text: `
        {{- section.settings.quiz_text1 | split: '4:' | last -}}
        `,  isCorrect: "d" }
    ]
    },

    {
    id: 2,
    q: {{- section.settings.quiz_text2 | split: '1:' | first -}},
    a: [
        { text: `
        {{- section.settings.quiz_text2 | split: '2:' | first | split: '1:' | last -}}
        `},
        { text: `
        {{- section.settings.quiz_text2 | split: '3:' | first | split: '2:' | last -}}
        ` },
        { text: `
        {{- section.settings.quiz_text2 | split: '4:' | first | split: '3:' | last -}}
        ` },
        { text: `
        {{- section.settings.quiz_text2 | split: '4:' | last -}}
        ` }
    ]
    },

    {
    id: 3,
    q: {{- section.settings.quiz_text3 | split: '1:' | first -}},
    a: [
        { text: `
        {{- section.settings.quiz_text3 | split: '2:' | first | split: '1:' | last -}}
        `, isCorrect: "a"},
        { text: `
        {{- section.settings.quiz_text3 | split: '3:' | first | split: '2:' | last -}}
        `, isCorrect: "b"},
        { text: `
        {{- section.settings.quiz_text3 | split: '4:' | first | split: '3:' | last -}}
        `, isCorrect: "c"},
        { text: `
        {{- section.settings.quiz_text3 | split: '4:' | last -}}
        `, isCorrect: "d"},
    ]
    }
]

// Set start
var start = true;

// Iterate
function iterate(id) {


// Getting the result display section
var result = document.getElementsByClassName("result");
// result[0].innerText = "";

// Getting the question
const question = document.getElementById("question");


// Setting the question text
question.innerText = Questions[id].q;

// Getting the options
const op1 = document.getElementById('op1');
const op2 = document.getElementById('op2');
const op3 = document.getElementById('op3');
const op4 = document.getElementById('op4');


// Providing option text
op1.innerHTML = Questions[id].a[0].text;
op2.innerHTML = Questions[id].a[1].text;
op3.innerHTML = Questions[id].a[2].text;
op4.innerHTML = Questions[id].a[3].text;


// Providing the true or false value to the options
op1.value = Questions[id].a[0].isCorrect;
op2.value = Questions[id].a[1].isCorrect;
op3.value = Questions[id].a[2].isCorrect;
op4.value = Questions[id].a[3].isCorrect;

var selected = "";

// Show selection for op1
op1.addEventListener("click", () => {
    selected = op1.value;
})

// Show selection for op2
op2.addEventListener("click", () => {
    selected = op2.value;
})

// Show selection for op3
op3.addEventListener("click", () => {
    selected = op3.value;
})

// Show selection for op4
op4.addEventListener("click", () => {
    selected = op4.value;
})


}

if (start) {
iterate("0");
}

// submit button and method
const submit = document.getElementsByClassName('submit')[0];


// Next button and method
let next = document.querySelectorAll('.option-container .option');
let id = 0;
var redirect, redirect2, final;
for (let i = 0; i < next.length; i++) {
    let self = next[i];
    self.addEventListener("click", () => {
        let value = self.value;
        if (id == 1){redirect = value}
        if (id == 2){document.querySelector('#op4').style.display = "none";}
        if (id == 3){
         redirect2 = value;
         final = `${redirect}${redirect2}`;
         console.log(final)
          let redirect_url = '';
switch(final){
case 'aa':
redirect_url = "https://www.boat-lifestyle.com/";
break;

}
         submit.classList.remove("d-none");
         document.querySelector('.option-container').style.pointerEvents = "none";
        }
        if (id < 3) {
            id+=1;
            console.log(id);
            iterate(id);
        }
        if (id > 0){ previous.classList.remove("d-none") }
    })
}

// previous button and method
const previous = document.getElementsByClassName('previous')[0];
previous.addEventListener("click", () => {
  if (id > 0) {
      id--;
      iterate(id);
      console.log(id);
      document.querySelector('.option-container').style.pointerEvents = "auto";
  }
  if( id == 0 ) {previous.classList.add("d-none")}
  if (id == 2){document.querySelector('#op4').style.display = "block";}
})


submit.addEventListener("click", () => {
  console.log(redirect_url);
//  document.location.href= redirect_url;
})

</script>
{% schema %}
  {
    "name": "section Popup quiz",
    "class": "Popup_quiz",
    "settings": [
      {
        "type": "checkbox",
        "id": "landing_based",
        "label": "popup quiz on landing"
      },
      {
        "type": "text",
        "id": "popup_id",
        "label": "class/id of <a> to target if not to be popedup on landing"
      },
      {
        "type": "image_picker",
        "id": "popup_image",
        "label": "Popup background"
      }, 
       {
        "type": "html",
        "id": "quiz_text",
        "label": "quiz options1"
      },
      {
        "type": "html",
        "id": "quiz_text1",
        "label": "quiz options2"
      },
      {
        "type": "html",
        "id": "quiz_text2",
        "label": "quiz options3"
      },
      {
        "type": "html",
        "id": "quiz_text3",
        "label": "quiz options4"
      }
    ],
    "presets": [
      {
        "name": "section Popup quiz"
      }
    ]
  }
{% endschema %}
