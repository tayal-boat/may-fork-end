{% layout none %}
<!DOCTYPE html>
<html class="no-js" lang="{{ shop.locale }}">
<head>
  
  <!-- Symmetry 4.6.2 -->
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
  <meta name="viewport" content="width=device-width,initial-scale=1.0" />
  <meta name="theme-color" content="{{ settings.btn_col }}">

  {% if page_description %}
  <meta name="description" content="{{ page_description | escape }}" />
  {% endif %}
  <link rel="canonical" href="{{ canonical_url }}" />

  

  {{ 'styles.scss.css' | asset_url | stylesheet_tag }}
  {{ 'animation.css' | asset_url | stylesheet_tag }}


  {{ 'https://code.jquery.com/jquery-3.3.1.min.js' | script_tag }}
  <script>
    window.theme = window.theme || {};
    theme.jQuery = jQuery;
    theme.money_format = {{ shop.money_format | json }};
    theme.money_container = '.theme-money';
    theme.strings = {
      previous: {{ 'general.accessibility_labels.previous' | t | json }},
      next: {{ 'general.accessibility_labels.next' | t | json }}
    };
    document.documentElement.className = document.documentElement.className.replace('no-js', '');
  </script>
	  <link href="https://fonts.googleapis.com/css?family=Montserrat:300,400,500,600,700&display=swap" rel="stylesheet">
  
  {{ content_for_header }}
  
<!--   <script type="text/javascript" src="https://sdk.qikify.com/tmenu/app-v5.js?token=zglT1wgEYgk5QY3uksUVJpnOhZVSKb34&shop=boat-nirvana.myshopify.com" defer="defer"></script>
  <script src="//staticxx.s3.amazonaws.com/aio_stats_lib_v1.min.js?v=1.0"></script>
  <script type="text/javascript" src="//script.crazyegg.com/pages/scripts/0091/3912.js" async="async"></script> -->
  <style>
    .productDescriptions1, .productDescriptions1 h1{
    	color: #ffffff !important;
    }
    .ac-tabs input:checked ~ .ac-tab-content{
      max-height: initial !important;
    }
    #content{
      margin-top: 15px;
    }
    .ac-tab-content{
    	overflow: hidden;
    }
  </style>
</head>

<body class="template-{{ template | split: '.' | first }}">
  <a class="skip-link visually-hidden" href="#content">{{ 'general.accessibility_labels.skip_to_content' | t }}</a>

  <main id="content" role="main">
    <div class="container cf">

      {% comment %}
        The contents of the product.liquid template can be found in /sections/product-template.liquid
      {% endcomment %}

      <div data-section-type="product-template">
  <div class="loading" id="pa-loader" style="display:block;">
<div class="spinner">
<img src="https://cdn.shopify.com/s/files/1/0057/8938/4802/t/11/assets/286.gif?11553">
  </div>
</div>
  <div class="container desktop-only">
    <div class="page-header cf">
      <div class="filters">
        {% if section.settings.prod_show_tags and product.tags.size > 0 %}
        <span class="tags">
          <a href="#" data-toggle-target=".tags.nav-row">{{ 'products.product.tags' | t }} <span class="state">+</span></a>
        </span>
        {% endif %}

        {% if section.settings.prod_show_type %}
        {% assign product_type_handle = product.type | handle %}
        {% if collections[product_type_handle].handle == product_type_handle %}
        {% assign type_url = collections[product_type_handle].url %}
        {% else %}
        {% assign type_url = product.type | url_for_type %}
        {% endif %}
        <span class="see-more">{{ 'products.product.see_more_of_this_type' | t }}</span><span class="see-more-type"> {{ product.type | link_to: type_url }}</span>
        {% endif %}
      </div>

      {% if collection %}
      <div class="social-area">
        <span class="nextprev">
          {% if collection.previous_product %}
          <a class="control-prev" href="{{ collection.previous_product }}">{{ 'products.product.previous' | t }}</a>
          {% endif %}
          {% if collection.previous_product and collection.next_product %} / {% endif %}
          {% if collection.next_product %}
          <a class="control-next" href="{{ collection.next_product }}">{{ 'products.product.next' | t }}</a>
          {% endif %}
        </span>
      </div>
      {% endif %}
    </div>
  </div>

  {% if section.settings.prod_show_tags and product.tags.size > 0 %}
  <div class="tags nav-row spaced-row hidden desktop-only">
    <ul>
      {% for tag in product.tags %}
      <li><a href="{% if collection %}{{ collection.url }}{% else %}/collections/all{% endif %}/{{ tag | handle }}">{{ tag }}</a></li>
      {% endfor %}
    </ul>
  </div>
  {% endif %}

  {%- assign inv_mngmt_size = bold_selected_or_first_available_variant.inventory_management | size -%}
  {%- assign limit_as_int = settings.prod_stock_warn_limit_int | plus: 0 -%}
  {%- assign meta_label = false -%}
  {%- for tag in product.tags -%}
    {%- if tag contains 'meta-label-' -%}
      {%- assign meta_label = true -%}
    {%- endif -%}
  {%- endfor -%}

  {%- if variant.available != true -%}
    {%- assign label_status = 'variant-status--unavailable' -%}
  {%- else -%}
    {%- if meta_label == true -%}
      {%- assign label_status = 'has-custom-label' -%}
    {%- elsif variant.compare_at_price > bold_variant_price -%}
      {%- assign label_status = 'variant-status--on-sale' -%}
    {%- elsif settings.prod_stock_warn_show and bold_variants_size == 1 and inv_mngmt_size > 0 and bold_selected_or_first_available_variant.inventory_quantity > 0 and bold_selected_or_first_available_variant.inventory_quantity <= limit_as_int -%}
      {%- assign label_status = 'has-inventory-label' -%}
    {%- else -%}
      {%- assign label_status = 'no-label' -%}
    {%- endif -%}
  {%- endif -%}

  {%- assign lightbox_size = 'master' -%}

  <div class="product-detail spaced-row container cf {{ label_status }}" style="display: none;">
	
    <div class="detail product-column-right gallery-layout-{{ section.settings.prod_gall_thumbs_under }}">
      
      <ul class="prodct_variant">
        {% for variant in product.variants %}
{%- include 'bold-variant' with variant, hide_action: 'skip' -%}      		
        <li class="veriant_sect" id="{{ variant.id }}" title="{{variant.title}}"><span>{{variant.title}}</span></li>
        {% endfor %}
      </ul>
  	
      
      
      

      {% comment %} Add code to show under the description on the line below this one, if beside the image {% endcomment %}
      <!-- Underneath the description -->
            
    </div>
       
    </div>
    <div class="container-fluid">
    <div class="description user-content padded-row">{{ product.description }}</div>

    {% comment %} Add code to show under the description on the line below this one, if full-width underneath the image {% endcomment %}
    <!-- Underneath the description -->
    
  </div><!-- /.product-detail -->

  <div class="mobile-only product-meta">
    {% if section.settings.prod_show_tags and product.tags.size > 0 %}
    <div class="tags tags-inline product-meta-row">
      <div class="container">
        <label>{{ 'products.product.tags' | t }}</label>
        <ul>
          {% for tag in product.tags %}
          <li><a href="{% if collection %}{{ collection.url }}{% else %}/collections/all{% endif %}/{{ tag | handle }}">{{ tag }}</a></li>
          {% endfor %}
        </ul>
      </div>
    </div>
    {% endif %}
    <div class="product-meta-row further-nav">
      <div class="container">
        <div class="prev">
          {% if collection.previous_product %}
          <a class="control-prev" href="{{ collection.previous_product }}" aria-label="{{ 'products.product.previous' | t | escape }}">{% include 'svg-chevron-left' %}</a>
          {% endif %}
        </div>

        <div class="see-more">
          {%- if section.settings.prod_show_type and product.type != blank -%}
            {%- assign product_type_handle = product.type | handle -%}
            {%- if collections[product_type_handle].handle == product_type_handle -%}
              {%- assign type_url = collections[product_type_handle].url -%}
            {%- else -%}
              {%- assign type_url = product.type | url_for_type -%}
            {%- endif -%}
            {{ product.type | link_to: type_url }}
          {% endif %}
        </div>

        <div class="next">
          {% if collection.next_product %}
          <a class="control-next" href="{{ collection.next_product }}" aria-label="{{ 'products.product.next' | t | escape }}">{% include 'svg-chevron-right' %}</a>
          {% endif %}
        </div>
      </div>
    </div>
  </div>

</div>

<style>
.loading{position: fixed;background-color: #fff;opacity: .9;top: 0;left: 0;width: 100%;    height: 100%;display: none;z-index: 999999;}
.spinner{width: 40px;height: 40px;position: relative;margin: 25% auto;}
.double-bounce1, .double-bounce2 {width: 100%;height: 100%;border-radius: 50%;background-color: red;opacity: 0.6;position: absolute;top: 0;left: 0;-webkit-animation: sk-bounce 2.0s infinite ease-in-out;animation: sk-bounce 2.0s infinite ease-in-out;}
.double-bounce2 {-webkit-animation-delay: -1.0s;animation-delay: -1.0s;background-color: yellow;}
.productSpecificationbox table{ color:#FFF}
.productPart-fourth .productSpecificationbox table td p[style]{ color:#FFF!important}
@-webkit-keyframes sk-bounce { 0%, 100% { -webkit-transform: scale(0.0) } 50% { -webkit-transform: scale(1.0) }}
@keyframes sk-bounce { 0%, 100% { transform: scale(0.0); -webkit-transform: scale(0.0); } 50% { transform: scale(1.0); -webkit-transform: scale(1.0); }}
</style>
<style>
.prodct_variant {padding: 0; display: flex;flex-wrap: wrap;margin: 0 0 -10px;list-style: none;}
.prodct_variant li {overflow: hidden;box-sizing: border-box;display: inline-block;padding: 0 15px;margin: 0 10px 10px 0;min-width: 4.5em;height: 48px;line-height: 46px;border: 1px solid #262626; background: #000; color: #fff; position: relative;	text-align: center;	cursor: pointer;}
.prodct_variant li.activevar, .prodct_variant li.activevar:hover {border-color: #fff;}
.product_section {height: 967px;background-size: 100% 100%;}
.styled-select.has-clickyboxes {display: none;}
</style>

      {{ 'customproduct.css' | asset_url | stylesheet_tag }}
      {{ 'responsive.css' | asset_url | stylesheet_tag }}
      <script type="application/json" id="ProductJson-{{ product.id }}">
        {%- include 'bold-product', output: 'json' -%}
      </script>

      {% assign current_variant = bold_selected_or_first_available_variant %}
{%- include 'bold-variant' with current_variant, output: 'none' -%}

      <script type="application/ld+json">
      {
        "@context": "http://schema.org/",
        "@type": "Product",
        "name": {{ product.title | json }},
        "url": {{ shop.url | append: product.url | json }},
        {%- if product.featured_image -%}
          {%- assign image_size = product.featured_image.width | append: 'x' -%}
          "image": [
            {{ product.featured_image.src | img_url: image_size | prepend: "https:" | json }}
          ],
        {%- endif -%}
        "description": {{ product.description | strip_html | json }},
        {%- if current_variant.sku != blank -%}
          "sku": {{ current_variant.sku | json }},
        {%- endif -%}
        "brand": {
          "@type": "Thing",
          "name": {{ product.vendor | json }}
        },
        "offers": [
          {%- for variant in product.variants -%}
{%- include 'bold-variant' with variant, hide_action: 'skip' -%}
            {
              "@type" : "Offer",
              {%- if variant.sku != blank -%}
                "sku": {{ variant.sku | json }},
              {%- endif -%}
              "availability" : "http://schema.org/{% if product.available %}InStock{% else %}OutOfStock{% endif %}",
              "price" : {{ bold_variant_price | divided_by: 100.00 | json }},
              "priceCurrency" : {{ cart.currency.iso_code | json }},
              "url" : {{ shop.url | append: variant.url | json }}
            }{% unless forloop.last %},{% endunless %}
          {%- endfor -%}
        ]
      }
      </script>

    </div><!-- /.container -->
  </main><!-- /#content -->
 

  {{ 'vendor.js'  | asset_url | script_tag }}
  {{ 'theme.js'  | asset_url | script_tag }}
  {{ 'aos.js'  | asset_url | script_tag }}
  {% include 'currencies' %}

  {{ 'booster-page-speed-optimizer.js' | asset_url | script_tag }}
  <script>
AOS.init({
  duration: 1200,
})
</script>
<!-- <script src="https://script.plobalapps.com/js/PlobalBridge.js?v=4.5"></script> -->
  <script>
    (function(){
    window.PlobalBridge = {
        openURL:function(url,title,open_links_in){
            try {
                if(window.webkit && window.webkit.messageHandlers && window.webkit.messageHandlers.openURL){
                    window.webkit.messageHandlers.openURL.postMessage({'type':open_links_in,'url':url,'title':title});
                }
            } catch(e) {
                console.log("ios error openURL");
                console.log(e);
            }
            try {
                if(window && window.AndroidBridge && window.AndroidBridge.openURL){
                    window.AndroidBridge.openURL(open_links_in,url,title);
                }
            } catch(e) {
                console.log("android error openURL");
                console.log(e);
            }
            if(!window.webkit && !window.AndroidBridge){
                window.location.assign(url);
            }
        },
        openURLNew:function(data){
            try {
                if(window.webkit && window.webkit.messageHandlers && window.webkit.messageHandlers.openURLNew){
                    window.webkit.messageHandlers.openURLNew.postMessage(data);
                }
            } catch(e) {
                console.log("ios error openURLNew");
                console.log(e);
            }
            try {
                if(window && window.AndroidBridge && window.AndroidBridge.openURLNew){
                    window.AndroidBridge.openURLNew(JSON.stringify(data));
                }
            } catch(e) {
                console.log("android error openURLNew");
                console.log(e);
            }
            if(!window.webkit && !window.AndroidBridge){
                window.location.assign(data.url);
            }
            this.openURL(data.url,data.title,data.type);
        },
        openURLNewIOS:function(data){
            try {
                if(window.webkit && window.webkit.messageHandlers && window.webkit.messageHandlers.openURLNew){
                    window.webkit.messageHandlers.openURLNew.postMessage(data);
                }
            } catch(e) {
                console.log("ios error openURLNew");
                console.log(e);
            }
            
            if(!window.webkit){
                window.location.assign(data.url);
            }
            this.openURL(data.url,data.title,data.type);
        },
        redirectTo:function(app_feature_id){
            try {
                if(window.webkit && window.webkit.messageHandlers && window.webkit.messageHandlers.redirectTo){
                    window.webkit.messageHandlers.redirectTo.postMessage({'app_feature_id':app_feature_id});
                }
            } catch(e) {
                console.log("ios error redirectTo");
                console.log(e);
            }
            try {
                if(window && window.AndroidBridge && window.AndroidBridge.redirectTo){
                    window.AndroidBridge.redirectTo(JSON.stringify({'app_feature_id':app_feature_id}));
                }
            } catch(e) {
                console.log("android error redirectTo");
                console.log(e);
            }
            if(!window.webkit && !window.AndroidBridge){
                alert(app_feature_id);
            }
        },
        adjustWebViewHeight:function(container){
            if(!container){
                var height = document.body.clientHeight;
            }else if(container == 0){
                var height = 0;
            }
            else if(container == -25){
                var height = -25;
            }else{
                var height = document.getElementById(container).clientHeight;
            }
            height +=25;
            try {
                if(window.webkit && window.webkit.messageHandlers && window.webkit.messageHandlers.adjustWebViewHeight){
                    window.webkit.messageHandlers.adjustWebViewHeight.postMessage(height);
                }
            } catch(e) {
                console.log("ios error adjustWebViewHeight");
                console.log(e);
            }
            if(!window.webkit && !window.AndroidBridge){
                console.log('adjustWebViewHeight  '+height);
            }
        },
        addLineItemProperty:function(obj){
            try {
                if(window.webkit && window.webkit.messageHandlers && window.webkit.messageHandlers.addLineItemProperty){
                    window.webkit.messageHandlers.addLineItemProperty.postMessage(obj);
                }
            } catch(e) {
                console.log("ios error addLineItemProperty");
                console.log(e);
            }
            try {
                if(window && window.AndroidBridge && window.AndroidBridge.addLineItemProperty){
                    window.AndroidBridge.addLineItemProperty(JSON.stringify(obj));
                }
            } catch(e) {
                console.log("android error addLineItemProperty");
                console.log(e);
            }
            // if(!window.webkit && !window.AndroidBridge){
            //     console.log('addLineItemProperty  '+JSON.stringify(obj));
            // }
            console.log('addLineItemProperty  '+JSON.stringify(obj));
        },
        removeLineItemProperty:function(key){
            try {
                if(window.webkit && window.webkit.messageHandlers && window.webkit.messageHandlers.removeLineItemProperty){
                    window.webkit.messageHandlers.removeLineItemProperty.postMessage(key);
                }
            } catch(e) {
                console.log("ios error addLineItemProperty");
                console.log(e);
            }
            try {
                if(window && window.AndroidBridge && window.AndroidBridge.removeLineItemProperty){
                    window.AndroidBridge.removeLineItemProperty(key);
                }
            } catch(e) {
                console.log("android error removeLineItemProperty");
                console.log(e);
            }
            if(!window.webkit && !window.AndroidBridge){
                console.log('removeLineItemProperty  '+key);
            }
        },
        setAddToCartBehaviour:function(obj){
            console.log("setAddToCartBehaviour");
            console.log(obj);
            try {
                if(window.webkit && window.webkit.messageHandlers && window.webkit.messageHandlers.setAddToCartBehaviour){
                    window.webkit.messageHandlers.setAddToCartBehaviour.postMessage(obj);
                }
            } catch(e) {
                console.log("ios error setAddToCartBehaviour");
                console.log(e);
            }
            try {
                if(window && window.AndroidBridge && window.AndroidBridge.setAddToCartBehaviour){
                    window.AndroidBridge.setAddToCartBehaviour(JSON.stringify(obj));
                }
            } catch(e) {
                console.log("android error setAddToCartBehaviour");
                console.log(e);
            }
            if(!window.webkit && !window.AndroidBridge){
                console.log('setAddToCartBehaviour  '+JSON.stringify(obj));
            }
        },
        setBuyNowBehaviour:function(obj){
            try {
                if(window.webkit && window.webkit.messageHandlers && window.webkit.messageHandlers.setBuyNowBehaviour){
                    window.webkit.messageHandlers.setBuyNowBehaviour.postMessage(obj);
                }
            } catch(e) {
                console.log("ios error setBuyNowBehaviour");
                console.log(e);
            }
            try {
                if(window && window.AndroidBridge && window.AndroidBridge.setBuyNowBehaviour){
                    window.AndroidBridge.setBuyNowBehaviour(JSON.stringify(obj));
                }
            } catch(e) {
                console.log("android error setBuyNowBehaviour");
                console.log(e);
            }
            if(!window.webkit && !window.AndroidBridge){
                console.log('setBuyNowBehaviour  '+JSON.stringify(obj));
            }
        },
        changeDisplayInfo:function(data){
            try {
                if(window.webkit && window.webkit.messageHandlers && window.webkit.messageHandlers.changeDisplayInfo){
                    window.webkit.messageHandlers.changeDisplayInfo.postMessage(data);
                }
            } catch(e) {
                console.log("ios error changeDisplayInfo");
                console.log(e);
            }
            try {
                if(window && window.AndroidBridge && window.AndroidBridge.changeDisplayInfo){
                    window.AndroidBridge.changeDisplayInfo(JSON.stringify(data));
                }
            } catch(e) {
                console.log("android error changeDisplayInfo");
                console.log(e);
            }
            if(!window.webkit && !window.AndroidBridge){
                console.log('changeDisplayInfo '+JSON.stringify(data));
            }
        },
        addCustomerProperty:function(key,value){
            console.log(key,value);
            try {
                if(window.webkit && window.webkit.messageHandlers && window.webkit.messageHandlers.addCustomerProperty){
                    window.webkit.messageHandlers.addCustomerProperty.postMessage({'key':key,'value':value});
                }
            } catch(e) {
                console.log("ios error addCustomerProperty");
                console.log(e);
            }
            try {
                if(window && window.AndroidBridge && window.AndroidBridge.addCustomerProperty){
                    window.AndroidBridge.addCustomerProperty(key,value);
                }
            } catch(e) {
                console.log("android error addCustomerProperty");
                console.log(e);
            }
            if(!window.webkit && !window.AndroidBridge){
                console.log('addCustomerProperty '+key+' '+ value);
            }
        },
        addToCart:function(variant){
            try {
                if(window.webkit && window.webkit.messageHandlers && window.webkit.messageHandlers.addToCart){
                    window.webkit.messageHandlers.addToCart.postMessage(variant);
                }
            } catch(e) {
                console.log("ios error addToCart");
                console.log(e);
            }
            try {
                if(window && window.AndroidBridge && window.AndroidBridge.addToCart){
                    window.AndroidBridge.addToCart(JSON.stringify(variant));
                }
            } catch(e) {
                console.log("android error addToCart");
                console.log(e);
            }
            if(!window.webkit && !window.AndroidBridge){
                console.log('addToCart '+JSON.stringify(variant));
            }
        },
        changeAddToCartBehaviour:function(rules){

        },
        dataReceiver:function(data){
            console.log('dataReceiver');
        },
        requestData:function(data){
            console.log('requestData');
        },
        shareData:function(data){
            try {
                if(window.webkit && window.webkit.messageHandlers && window.webkit.messageHandlers.shareData){
                    window.webkit.messageHandlers.shareData.postMessage({'data':data});
                }
            } catch(e) {
                console.log("ios error shareData");
                console.log(e);
            }
            try {
                if(window && window.AndroidBridge && window.AndroidBridge.shareData){
                    window.AndroidBridge.shareData(data);
                }
            } catch(e) {
                console.log("android error shareData");
                console.log(e);
            }
            if(!window.webkit && !window.AndroidBridge){
                console.log('shareData '+data);
            }
        },
        openFileChooser:function(){
            console.log('openFileChooser');
            try {
                if(window.webkit && window.webkit.messageHandlers && window.webkit.messageHandlers.openFileChooser){
                    window.webkit.messageHandlers.openFileChooser.postMessage("");
                }
            } catch(e) {
                console.log("ios error openFileChooser");
                console.log(e);
            }
            try {
                if(window && window.AndroidBridge && window.AndroidBridge.openFileChooser){
                    window.AndroidBridge.openFileChooser();
                }
            } catch(e) {
                console.log("android error openFileChooser");
                console.log(e);
            }
            if(!window.webkit && !window.AndroidBridge){
                console.log('openFileChooser');
            }
        },
        callBridgeFunction:function(functionName, paramsIos, paramAndroid){
            try {
                if(window && window.AndroidBridge){
                    if(paramAndroid){
                        window.AndroidBridge[functionName](paramAndroid);
                    }
                    else{
                        window.AndroidBridge[functionName]();
                    }

                }
            } catch(e) {
                console.log("I got clicked android error");
                console.log(e);
            }

            try{
                if(window.webkit && window.webkit.messageHandlers && window.webkit.messageHandlers[functionName]){
                    if(paramsIos){
                        window.webkit.messageHandlers[functionName].postMessage(paramsIos);
                    }
                    else{
                        window.webkit.messageHandlers[functionName].postMessage();
                    }
                }
            }
            catch(e){
                console.log("I got clicked ios error");
                console.log(e);
            }
        },
        openProductDetail:function(product_id, title) {
            var jsonToSend ={
                product_id: product_id.toString(),
                title: title
            };

            this.callBridgeFunction('openProductDetails', jsonToSend, JSON.stringify(jsonToSend));
        },
        openCollection: function (collection_id, title) {
            var jsonToSend ={
                collection_id: collection_id.toString(),
                title: title
            };

            this.callBridgeFunction('openCollection', jsonToSend, JSON.stringify(jsonToSend));
        },
        addToCart:function(variantID){
            event.stopPropagation();
            this.callBridgeFunction('addToCart', variantID.toString(), variantID.toString());
        },
        openCart:function(event) {
            event.stopPropagation();
            this.callBridgeFunction('openCart');
        },
        operate:{
            '+': function(a, b) { return a + b },
            '<': function(a, b) { return a < b },
            '=': function(a, b) { return a < b },
            'equal': function(a, b) { return a == b; },
            'not_equal': function(a, b) { return a != b; }
        },
        isJson:function(str) {
            try {
                JSON.parse(str);
            } catch (e) {
                return false;
            }
            return true;
        },
        validateData:function(obj){
            try {
                if(window.webkit && window.webkit.messageHandlers && window.webkit.messageHandlers.validateData){
                    window.webkit.messageHandlers.validateData.postMessage(obj);
                }
            } catch(e) {
                console.log("ios error validateData");
                console.log(e);
            }
            try {
                if(window && window.AndroidBridge && window.AndroidBridge.validateData){
                    window.AndroidBridge.validateData(JSON.stringify(obj));
                }
            } catch(e) {
                console.log("android error validateData");
                console.log(e);
            }
            // if(!window.webkit && !window.AndroidBridge){
            //
            // }
            console.log('validateData '+JSON.stringify(obj));
        },
        triggerEvent:function(el, event) {
            if ("createEvent" in document) {
                var evt = document.createEvent("HTMLEvents");
                evt.initEvent(event, false, true);
                el.dispatchEvent(evt);
            }
            else
                el.fireEvent(event);
        }
    };
})();
  </script>
  <script>
    window.onload = function(){
      document.getElementById("pa-loader").style.display = "none";
      setTimeout(function(){
           PlobalBridge.adjustWebViewHeight();
           document.getElementById("pa-loader").style.display = "none";
      },1000);
    
      setTimeout(function(){ 
    
      var videTagElements = document.querySelectorAll('.ac-tabs a[video-url]');
      for(var i=0;i<videTagElements.length;i++){
          var link = videTagElements[i].getAttribute('video-url');
          var title = videTagElements[i].innerText;
          videTagElements[i].setAttribute('onclick',"event.preventDefault();PlobalBridge.openURLNew({'url':'"+link+"','title':'"+title+"','type':'in_app','request_method':'GET'});")
      }
      
      var aTagElements = document.querySelectorAll('.ac-tabs a[href]');
      for(var i=0;i<aTagElements.length;i++){
          var link = aTagElements[i].href;
          var title = aTagElements[i].innerText;
          aTagElements[i].setAttribute('onclick',"PlobalBridge.openURLNew({'url':'"+link+"','title':'"+title+"','type':'browser','request_method':'GET'});")
          aTagElements[i].href = '#';
      }
              document.getElementById("pa-loader").style.display = "none";
    }, 2000);
  }
</script>
</body>
</html>