{% comment %}
/**
 * DEVELOPER DOCUMENTATION
 *
 * Include your custom JavaScript here.
 *
 * The theme Focal has been developed to be easily extensible through the usage of a lot of different JavaScript
 * events, as well as the usage of custom elements (https://developers.google.com/web/fundamentals/web-components/customelements)
 * to easily extend the theme and re-use the theme infrastructure for your own code.
 *
 * The technical documentation is summarized here.
 *
 * ------------------------------------------------------------------------------------------------------------
 * BEING NOTIFIED WHEN A VARIANT HAS CHANGED
 * ------------------------------------------------------------------------------------------------------------
 *
 * This event is fired whenever a the user has changed the variant in a selector. The target get you the form
 * that triggered this event.
 *
 * Example:
 *
 * document.addEventListener('variant:changed', function(event) {
 *   let variant = event.detail.variant; // Gives you access to the whole variant details
 *   let form = event.target;
 * });
 *
 * ------------------------------------------------------------------------------------------------------------
 * MANUALLY CHANGE A VARIANT
 * ------------------------------------------------------------------------------------------------------------
 *
 * You may want to manually change the variant, and let the theme automatically adjust all the selectors. To do
 * that, you can get the DOM element of type "<product-variants>", and call the selectVariant method on it with
 * the variant ID.
 *
 * Example:
 *
 * const productVariantElement = document.querySelector('product-variants');
 * productVariantElement.selectVariant(12345);
 *
 * ------------------------------------------------------------------------------------------------------------
 * BEING NOTIFIED WHEN A NEW VARIANT IS ADDED TO THE CART
 * ------------------------------------------------------------------------------------------------------------
 *
 * This event is fired whenever a variant is added to the cart through a form selector (product page, quick
 * view...). This event DOES NOT include any change done through the cart on an existing variant. For that,
 * please refer to the "cart:updated" event.
 *
 * Example:
 *
 * document.addEventListener('variant:added', function(event) {
 *   var variant = event.detail.variant; // Get the variant that was added
 * });
 *
 * ------------------------------------------------------------------------------------------------------------
 * BEING NOTIFIED WHEN THE CART CONTENT HAS CHANGED
 * ------------------------------------------------------------------------------------------------------------
 *
 * This event is fired whenever the cart content has changed (if the quantity of a variant has changed, if a variant
 * has been removed, if the note has changed...). This event will also be emitted when a new variant has been
 * added (so you will receive both "variant:added" and "cart:updated"). Contrary to the variant:added event,
 * this event will give you the complete details of the cart.
 *
 * Example:
 *
 * document.addEventListener('cart:updated', function(event) {
 *   var cart = event.detail.cart; // Get the updated content of the cart
 * });
 *
 * ------------------------------------------------------------------------------------------------------------
 * REFRESH THE CART/MINI-CART
 * ------------------------------------------------------------------------------------------------------------
 *
 * If you are adding variants to the cart and would like to instruct the theme to re-render the cart, you cart
 * send the cart:refresh event, as shown below:
 *
 * document.documentElement.dispatchEvent(new CustomEvent('cart:refresh', {
 *   bubbles: true
 * }));
 *
 * ------------------------------------------------------------------------------------------------------------
 * USAGE OF CUSTOM ELEMENTS
 * ------------------------------------------------------------------------------------------------------------
 *
 * Our theme makes extensive use of HTML custom elements. Custom elements are an awesome way to extend HTML
 * by creating new elements that carry their own JavaScript for adding new behavior. The theme uses a large
 * number of custom elements, but the two most useful are drawer and popover. Each of those components add
 * a "open" attribute that you can toggle on and off. For instance, let's say you would like to open the cart
 * drawer, whose id is "mini-cart", you simply need to retrieve it and set its "open" attribute to true (or
 * false to close it):
 *
 * document.getElementById('mini-cart').open = true;
 *
 * Thanks to the power of custom elements, the theme will take care automagically of trapping focus, maintaining
 * proper accessibility attributes...
 *
 * If you would like to create your own drawer, you can re-use the <drawer-content> content. Here is a simple
 * example:
 *
 * // Make sure you add "aria-controls", "aria-expanded" and "is" HTML attributes to your button:
 * <button type="button" is="toggle-button" aria-controls="id-of-drawer" aria-expanded="false">Open drawer</button>
 *
 * <drawer-content id="id-of-drawer">
 *   Your content
 * </drawer-content>
 *
 * The nice thing with custom elements is that you do not actually need to instantiate JavaScript yourself: this
 * is done automatically as soon as the element is inserted to the DOM.
 *
 * ------------------------------------------------------------------------------------------------------------
 * THEME DEPENDENCIES
 * ------------------------------------------------------------------------------------------------------------
 *
 * While the theme tries to keep outside dependencies as small as possible, the theme still uses third-party code
 * to power some of its features. Here is the list of all dependencies:
 *
 * "vendor.js":
 *
 * The vendor.js contains required dependencies. This file is loaded in parallel of the theme file.
 *
 * - custom-elements polyfill (used for built-in elements on Safari - v1.0.0): https://github.com/ungap/custom-elements
 * - web-animations-polyfill (used for polyfilling WebAnimations on Safari 12, this polyfill will be removed in 1 year - v2.3.2): https://github.com/web-animations/web-animations-js
 * - instant-page (v5.1.0): https://github.com/instantpage/instant.page
 * - tocca (v2.0.9); https://github.com/GianlucaGuarini/Tocca.js/
 * - seamless-scroll-polyfill (v2.0.0): https://github.com/magic-akari/seamless-scroll-polyfill
 *
 * "flickity.js": v2.2.0 (with the "fade" package). Flickity is only loaded on demand if there is a product image
 * carousel on the page. Otherwise it is not loaded.
 *
 * "photoswipe": v4.1.3. PhotoSwipe is only loaded on demand to power the zoom feature on product page. If the zoom
 * feature is disabled, then this script is never loaded.
 */

/*
 * ------------------------------------------------------------------------------------------------------------
 * CLEVERTAP EVENTS
 * ------------------------------------------------------------------------------------------------------------
 *
 */
{% endcomment %}

Shopify.enable_namagoo = {{ settings.enable_namagoo }};


var userSource="";function quickATC(){let e=$(".quick-buy-product__info").find(".product-item-meta__title").text(),t=$(".quick-buy-product__info").find(".price--highlight").text().split("price")[1];var i=$(".color-swatch__radio:checked").val();clevertap.event.push("Added to Cart",{"Product Name":e+" - "+i,Amount:t,Quantity:1,source:"Quick View Drawer",userSource:userSource}),clevertap.profile.push({Site:{"A2C Product Name":e+" - "+i,"A2C Amount":t,"A2C Quantity":1}}),setTimeout(function(){$(".drawer--quick-buy").attr("open",!1),$(".header__cart").attr("aria-expanded",!0)},1200)}userSource=navigator.userAgent.includes("Mobile")?"Mobile":navigator.userAgent.includes("iPad")?"Tablet":"Desktop",$(".featured-collections").on("click",function(){let e=$(this).siblings(".section__header").find('.tabs-nav__item[aria-expanded="true"]').text();clevertap.event.push("Homepage Cards section clicked",{userSource:userSource,"secttion Title":e})}),$(".product-item__quick-form").on("click",function(){let e=$(this).parents(".product-item__image-wrapper").siblings(".product-item__info").find(".product-item-meta__title").text(),t=$(this).parents(".product-item__image-wrapper").siblings(".product-item__info").find(".price--highlight").text().split("price")[1];clevertap.event.push("Quick Buy Clicked",{"Product Title":e,Price:t,userSource:userSource})}),$(".gokwik-checkout").click(function(){clevertap.event.push("GoKwik Button Clicked")}),$("#mini-cart-form").submit(function(){var e=$(".cart-total").val(),t="",i=[];$("#mini-cart .line-item").each(function(e,n){var o=$(this).find(".product-item-meta__title").text(),r=$(this).find(".product-item-meta__title").attr("data-product_id"),c=$(this).find(".price--highlight").text().split("price")[1],a=$(this).find(".product-item-meta__title").attr("data-product_type"),l=$(this).find(".quantity-selector__input").val();t=0==e?o:t+","+o,i.push({item_name:o,item_id:r,price:c,item_category:a,quantity:l})}),clevertap.event.push("Checkout Button Clicked",{Amount:e,"Product Name":t}),dataLayer.push({ecommerce:null}),dataLayer.push({event:"begin_checkout",ecommerce:{items:i}})}),$(".footer__item-content .linklist__item").each(function(){$(this).on("click",function(){let e=$(this).text().trim();clevertap.event.push("Footer Menu Item Clicked",{Item:e,Source:"Footer"})})}),$(".header__inline-navigation .header__linklist-item").each(function(){$(this).on("click",function(){let e=$(this).text().trim();clevertap.event.push("Header Menu Item Clicked",{Item:e,Source:"Header Desktop"})})}),$(".header__inline-navigation").click(function(){clevertap.event.push("Hamburger Menu Clicked")}),$('a[aria-controls="mini-cart"]').click(function(){clevertap.event.push("Slider Cart Opened",{Source:"Header"})}),window.matchMedia("(max-width: 767px)").matches&&($(".footer__item-title").append('\n	<span class="expanded toggle">+</span>\n	<span class="collapsed visually-hidden toggle">-</span>\n  '),$(".footer__item--links").click(function(){$(this).find(".footer__item-content").slideToggle(),$(this).find("span.toggle").toggleClass("visually-hidden")})),$(".myDropdown .toggle-link").click(function(){$(".myDropdown .dropdown-menu").removeClass("visually-hidden")}),$(".myDropdown .close-popup").click(function(){$(".myDropdown .dropdown-menu").addClass("visually-hidden")}),$(document).click(function(e){e.stopPropagation(),0===$(".myDropdown").has(e.target).length&&$(".dropdown-menu").addClass("visually-hidden")}),$(".mobile-nav  .mobile-nav__item").each(function(){$(this).on("click",function(){let e=$(this).text().trim();clevertap.event.push("Header Menu Item Clicked",{Item:e,Source:"Header Mobile"})})});let currentURL=location.href,cartStr="/cart",cartHashStr="/#cart";-1!=currentURL.indexOf(cartStr)&&(location.href="https://www.boat-lifestyle.com/#cart"),-1!=currentURL.indexOf(cartHashStr)&&$(".header__cart").attr("aria-expanded",!0),
$("button.press-list__logo-item.tap-area").hover(function(){$(this).trigger("click")}),$(".product-item").each(function(){$(this).find(".meta-label-new-arrival").length&&$(this).find(".lowest-price ").remove()}),$(document).ready(function(){function e(e,t){let i=(e=e[t]).getAttribute("data-price");i=parseInt(i);let n=e.parentElement.className;if(Shopify.enable_namagoo&&n.includes("custom-product-card_namogoo")&&localStorage.getItem("Namogoo")){let o=i/100*JSON.parse(localStorage.getItem("Namogoo")).discountValue,r=e.nextElementSibling.getAttribute("data-compare-price"),c=r-(i-=o),a=Math.round(100*c/r),l=e.offsetParent.children[0],u=e.parentElement.nextElementSibling;l.className.includes("custom-saved-price-lable")&&(l.innerHTML="You Save "+a+"%"),u.className.includes("custom-save-price")&&(u.innerHTML="You Save: "+Shopify.formatMoney(c,Shopify.money_format)+" ("+a+"%) "),e.className.includes("product-card-price-varies")?e.innerHTML="From "+Shopify.formatMoney(i,Shopify.money_format):e.innerHTML=Shopify.formatMoney(i,Shopify.money_format)}}if(Shopify.enable_flash_sale||Shopify.enable_namagoo){let t=$(".product-card-price");for(let i=0;i<t.length;i++)e(t,i)}});
$(document).on("click", ".custom-search-cta", function(e) {
  e.preventDefault();
  var t = $(this).parents("form").serialize();
  $.ajax({
      url: "/cart/add.js",
      dataType: "json",
      cache: !1,
      type: "post",
      data: t,
      success: function(e) {
          document.documentElement.dispatchEvent(new CustomEvent("cart:refresh", {
              bubbles: !0
          })), document.getElementById("mini-cart").open = !0, document.querySelector("body").classList.add("noScroll"), $(".search-clear-icon").css('display', 'flex'), setTimeout(function() {
              $(".header__cart-count").html($("#mini-cart input.cart--count").val());
              $('.header__cart-count.header__cart-count--floating.bubble-count').text($("#mini-cart input.cart--count").val());
              cart_bubble();
          }, 1500)
      }
  })
});

window.addEventListener("load", function() {
  function e() {
      "false" == sessionStorage.getItem("lazyloaded_sections") && ($.ajax({
          url: "/pages/custom-homepage",
          type: "GET",
          dataType: "html",
          success: function(e) {
              let t = $(e).find("#index-lazyload_sections").html();
              $(".custom-lazyloaded-content").html(t);
              Shopify.homepageLazyload();
          }
      }), sessionStorage.setItem("lazyloaded_sections", "true"))
  }
  sessionStorage.setItem("lazyloaded_sections", "false"), document.addEventListener("touchmove", e, !0), document.addEventListener("scroll", e, !0)
});

function isIOSMobile() {
  return /iPhone|iPad|iPod/i.test(navigator.userAgent)
};

if (!isIOSMobile()) {
  let i = Notification.permission;

  function e() {
      if ("visible" !== document.visibilityState) {
          icon = "image-url";
          var i = new Notification("Title", {
              body: "Message to be displayed",
              icon
          });
          i.onclick = () => {
              i.close(), window.parent.focus()
          }
      }
  }

  function t() {
    Notification.requestPermission(function(i) {
      "granted" === i && (clevertap.profile.push({
        Site: {
          "Web Push": !0,
          "MSG-push": !0
        }
      }), e(), console.log("granted"))
    })
  }
  "granted" === i ? e() : t()
};

// var actualDimension = $(window).width() + $(window).height();
// $(window).on('resize', function(){
//   if($(window).width() + $(window).height() < actualDimension) {
//     $('.fixed_nav.fixed_nav_mobile').css('position','relative')
//   } else {
//     $('.fixed_nav.fixed_nav_mobile').removeAttr('style')
//   }
// });

let unitsLeft = '';
let usual_price = '';

Shopify.variantChange = function(e){
  if(e.available == false){
    $('.custom-notify-btn').attr('data-variant-id', e.id);
    $('.custom-notify-btn').show();
    $('.product__info button#AddToCart.button--ternary').css('display','none')
  }else{
    $('.custom-notify-btn').hide();
    $('.product__info button#AddToCart.button--primary').css('display','block')
  }
  let custom_price = e.price / 100;
        custom_price = custom_price - 1000;
        if( document.querySelector('.custom-product-of-the-day-price .current_price')){
 document.querySelector('.custom-product-of-the-day-price .current_price').innerHTML = '₹'+ custom_price;
}
 let variantQtys = sessionStorage.getItem('variantQtys');
//  variantQtys = JSON.parse(variantQtys);
//  console.log(variantQtys);
//  unitsLeft = document.querySelector('.p-units');
 usual_price = document.querySelector('.usual_price');
      if(usual_price){
        usual_price.innerHTML = '₹'+ e.price / 100;
      }
  //  for (var key in variantQtys) {
  //   if (variantQtys.hasOwnProperty(e.id)) {
  //     let pod_units = variantQtys[e.id];
  //     // if(unitsLeft){
  //     //  unitsLeft.innerHTML = pod_units[0]['pod_units'];
  //     // }
  //     if(usual_price){
  //       usual_price.innerHTML = '₹'+ pod_units[0]['pod_revertprice'];
  //     }
  //    }
  //  }
}


// Creating cleverTap push event
function createCleverTapEvent( event_name, event_data ){
  if( event_name != '' && event_data != '' ){
    clevertap.event.push( event_name, event_data );
  }
}

// Owl slider 
// Note : Need to add custom_slider_init class , section_id , carousel-js snippet and schema to activate owl carosal in a section

$("#homepage-carousel .custom_slider_init").on('initialized.owl.carousel', async () => {
  $("#homepage-carousel .owl-item img").each(function(){$(this).css("width" , "100%")})
})

let section_id = '';
let sliderSelector = document.querySelectorAll('.custom_slider_init');
for (let i = 0; i < sliderSelector.length; i++) {
  section_id = sliderSelector[i].getAttribute('data-sliderId');
  let slider_section_id = '.custom_slider_init.' + section_id;
  // console.log(JSON.parse(sliderSelector[i].getAttribute('data-slideBy')));
  // console.log('.custom_slider_init.' + section_id);`
  $(slider_section_id).owlCarousel({
    loop: JSON.parse(sliderSelector[i].getAttribute('data-loop')),
    responsiveClass: JSON.parse(sliderSelector[i].getAttribute('data-responsiveClass')),
    autoplay: JSON.parse(sliderSelector[i].getAttribute('data-autoplay')),
    autoplayTimeout: JSON.parse(sliderSelector[i].getAttribute('data-autoplay-timeout')),
    autoplayHoverPause:true,
    stopOnHover: true,
    items: JSON.parse(sliderSelector[i].getAttribute('data-items')),
    slideBy: JSON.parse(sliderSelector[i].getAttribute('data-slideBy')),
    nav: true,
    dots: JSON.parse(sliderSelector[i].getAttribute('data-dots')),
    margin: JSON.parse(sliderSelector[i].getAttribute('data-margin')),
    responsive: {
        300: {
            items: JSON.parse(sliderSelector[i].getAttribute('data-responsive_Small_items')),
            dots: JSON.parse(sliderSelector[i].getAttribute('data-responsive_Small_dots'))
        },
        1024: {
           items: JSON.parse(sliderSelector[i].getAttribute('data-responsive_mid_items')),
        }
    },onInitialized: startProgressBar,onTranslate: resetProgressBar,onTranslated: startProgressBar
  }).on("dragged.owl.carousel", function(event) {
    $(slider_section_id).trigger('stop.owl.autoplay');
    $(slider_section_id).trigger('play.owl.autoplay');
    if(JSON.parse(sliderSelector[i].getAttribute('data-slideBy')) > 1){
      slide_item_on_drag(slider_section_id, event.relatedTarget['_drag']['direction'] )
    } 
  }); 
  function slide_item_on_drag(section_id, drag_direction) {
    if( drag_direction == 'right' ){// $(section_id + ' .owl-dots .owl-dot.active').prev().click();
    }
    else if( drag_direction == 'left' ){$(section_id + ' .owl-dots .owl-dot.active').next().click();} } 
  function startProgressBar() { $(".slide-progress").css({width: "100%",transition: "width 5000ms"});}
  function resetProgressBar() {$(".slide-progress").css({width: 0,transition: "width 0s"});}
  function openVideoPopup(url){
    if(url != ''){
      jQuery('.banner_video_modal .video_container iframe').attr('src', url);
      jQuery(".banner_video_modal").modal('show');
    }else{
      return false;
    }
  }
}

 
Shopify.homepageLazyload = function(){
  $('.explore_now_slider').owlCarousel({
    loop: true,
    responsiveClass: true,
    autoplay:true,
    items: 6,
    nav: false,
    dots: false,
    responsive: {
      300: {
        items: 2.3,
        margin: 10
      },
      600: {
        items: 5.2,
        margin: 10
      },
      1000: {
        items: 6,
        loop: true,
        margin: 10
      }
    }
  })

// Explore our slide section
var explore_now_slider_img = document.querySelectorAll('.explore_now_slider .explore_item');
explore_now_slider_img.forEach((slide, i) => {
    slide.addEventListener('click', function() {
      
        let imageurl = slide.querySelector('a').href;
        let imageTitle = slide.querySelector('img').alt;
        clevertap.event.push("Explore now clicked", {
          "image url": imageurl,
          "image Title": imageTitle,
          "userSource": userSource
        })
    })
  });

// Press section
    $('.custom_press_slider').owlCarousel({
      loop: true,
      responsiveClass: true,
      autoplay: true,
      items: 1,
      slideBy: 1,
      nav: false,
      dots: true
    });

  $('.shopify-section shopify-section--press').on('click', function() {
    clevertap.event.push("In the Press section clicked", {"userSource": userSource});
  });
  $("button.press-list__logo-item.tap-area").hover(function() {
    $(this).trigger("click")
  });
  labelsPriority()
}

function labelsPriority() {
  $('.product-item').each(function() {
      if($(this).find('.z-10').length > 0) {
          $(this).find('.z-10').css({
            'display': 'flex',
            'alignItems': 'center'
          });
      } else if($(this).find('.z-9').length > 0) {
          $(this).find('.z-9').css({
            'display': 'flex',
            'alignItems': 'center'
          });
      } else if($(this).find('.z-8').length > 0) {
          $(this).find('.z-8').css({
            'display': 'flex',
            'alignItems': 'center'
          });
      } else if($(this).find('.z-7').length > 0) {
          $(this).find('.z-7').css({
            'display': 'flex',
            'alignItems': 'center'
          });
      } else if($(this).find('.z-6').length > 0) {
          $(this).find('.z-6').css({
            'display': 'flex',
            'alignItems': 'center'
          });
      } else if($(this).find('.z-5').length > 0) {
          $(this).find('.z-5').css({
            'display': 'flex',
            'alignItems': 'center'
          });
      } else if($(this).find('.z-4').length > 0) {
          $(this).find('.z-4').css({
            'display': 'flex',
            'alignItems': 'center'
          });
      } else if($(this).find('.z-3').length > 0) {
          $(this).find('.z-3').css({
            'display': 'flex',
            'alignItems': 'center'
          });
      } else if($(this).find('.z-2').length > 0) {
          $(this).find('.z-2').css({
            'display': 'flex',
            'alignItems': 'center'
          });
      } 
  })
}
window.addEventListener('load', labelsPriority)

window.addEventListener('load', labelsPriority)

// Creating cleverTap push event
function createCleverTapEvent( event_name, event_data ){
  if( event_name != '' && event_data != '' ){
    clevertap.event.push( event_name, event_data );
    console.log(clevertap.getCleverTapID());
  }
}

// Creating cleverTap login event
function createCleverTapLoginEvent( event_name, event_data ){
  if( event_name != '' && event_data != '' ){
    clevertap.onUserLogin.push( event_name, event_data );
  }
}

// Strip HTML tags from string
function stripHtml(html){
   var tmp = document.createElement("DIV");
   tmp.innerHTML = html;
   return tmp.textContent || tmp.innerText || "";
}

/* clevertap code for login customer starts here */

$("#customer_login").submit(function(){
  var event = 'Login';
  var userEmail = document.getElementById("customer[email]").value;
  var event_info = { "Email": userEmail };
  var event_login = "Site";

  createCleverTapEvent( event, event_info );
  createCleverTapLoginEvent(event_login, event_info);
});

/* clevertap code for login customer ends here */

/* Clevertap code for announcement bar starts here */

$('.announce .announcement-bar__message p').each(function (ind, el) {
  $(el).on('click', function (e) {
    var announcementText = $(this).text();
    
    var event = 'Announcement bar clicked';
    var event_info = { "Message": announcementText, "userSource": userSource };

    createCleverTapEvent( event, event_info );
  });
});

/* Clevertap code for announcement bar ends here */


/* Clevertap code for Bootstrap carousel homepage starts here */

const slides = document.querySelectorAll('.carousel-inner .carousel--item');
slides.forEach((slide, i) => {
  slide.addEventListener('click', function() {
      let imageTitle = slide.querySelector('.image_alt').innerText;
      let slideNum = `${i+1}`
      
      var event = 'Homepage Banner clicked';
      var event_info = { "Banner Number": "Banner " + slideNum, "Banner Title": imageTitle, "userSource": userSource };

      createCleverTapEvent( event, event_info );
  })
});

/* Clevertap code for Bootstrap carousel homepage ends here */

/* Clevertap Code for "shop by category and top collections on colletion page" starts here  */

$('.top-collections.top-2 .collection-block').each(function () {
  $(this).click(function () {
    var item = $(this).find('.collection').attr('data-item');

    var event = "Top Collections Clicked";

    var event_info = { "Item": stripHtml(item), "userSource": userSource };

    createCleverTapEvent( event, event_info );
  });
});


/* Clevertap Code for "shop by category and top collections on colletion page" ends here  */

/* clevertap code for "image_carousel.liquid" section starts here */

  var image_slides = document.querySelectorAll('.deal-slider .slide-url');
  image_slides.forEach((slide, i) => {
    slide.addEventListener('click', function(e) {
      var imageurl = slide.href;
      var imageTitle = slide.querySelector('img').alt;
      var event = "image_carousel clicked";
      var event_info = { "image url": imageurl, "image Title": imageTitle, "userSource": userSource };
      createCleverTapEvent( event, event_info );
    })
  });

/* clevertap code for "image_carousel.liquid" section ends here */

/* clevertap code for Explore now section on homepage starts here */

  var explore_now_slider_img = document.querySelectorAll('.explore_now_slider .explore_item .explore_now_btn_link');
  explore_now_slider_img.forEach((explore_now_slide, i) => {
    explore_now_slide.addEventListener('click', function(e) {
      var imageurl = explore_now_slide.href;
      var imageTitle = explore_now_slide.querySelector('img').alt;
      var event = "Explore now clicked";
      var event_info = { "image url": imageurl, "image Title": imageTitle, "userSource": userSource };
      createCleverTapEvent( event, event_info );
    })
  });

/* clevertap code for Explore now section on homepage ends here */

/* Clevertap code starts for homepage-collection-banner.liquid */

  let collection_slides = document.querySelectorAll('.collection-banners .carousel-inner .carousel-item');
  collection_slides.forEach((slide, i) => {
    slide.addEventListener('click', function() {
      const slideNum = `${i+1}`;
      let imageTitle = slide.querySelector('.collection-banners .image_alt').innerText;
      
      var event = "Deals Banner clicked";
      var event_info = { "Banner Number": 'Banner ' + slideNum, "Banner Title": imageTitle, "userSource": userSource };
      createCleverTapEvent( event, event_info );
    })
  });

/* Clevertap code ends for homepage-collection-banner.liquid */

/* clevertap code for Featuerd blogs on homepage starts here */

$('.article-list').on('click', function() {
    var event = "Homepage Blog section clicked";
    var event_info = { "userSource": userSource };
    createCleverTapEvent( event, event_info );
});

/* clevertap code for Featuerd blogs on homepage ends here */

/* clevertap code for Press on homepage starts here */

  $('.shopify-section shopify-section--press').on('click', function() {
    var event = "In the Press section clicked";
    var event_info = { "userSource": userSource };
    createCleverTapEvent( event, event_info );
  });

/* clevertap code for Press on homepage ends here */

/* clevertap code for login customer starts here */

$("#customer_login").submit(function(){
  var event = 'Login';
  var userEmail = document.getElementById("customer[email]").value;
  var event_info = { "Email": userEmail };
  var event_login = "Site";

  createCleverTapEvent( event, event_info );
  createCleverTapLoginEvent(event_login, event_info);
});

/* clevertap code for login customer ends here */

/* clevertap code for customer registeration starts here */

$("#register-customer").submit(function(){
  var firstName = document.getElementById("customer[first_name]").value;
  var lastName = document.getElementById("customer[last_name]").value;
  var userEmail = document.getElementById("customer[email]").value;
  var event_login = "Site";
  var event = 'Sign Up';
  var event_info = { "Email": userEmail, "First Name": firstName, "Last Name": lastName };

  createCleverTapLoginEvent(event_login, event_info);
  createCleverTapEvent( event, event_info );
});

/* clevertap code for customer registeration ends here */

/* clevertap code for clicking razor pay starts here */
$(".razorpay-checkout").click(function () {
  var mini_Cart_data = document.querySelector("#mini-cart-form");
  var productsincart = mini_Cart_data.dataset.cart_items;
  var event = 'razor/magic Button Clicked';
  var event_info = { "cart products": productsincart, "Amount": cart_total_price };

  createCleverTapEvent( event, event_info );
});

/* clevertap code for clicking razor pay ends here */


// Custom JavaScript slider

$(document).ready(function () {

var section_id = '',
sliderSelector = document.querySelectorAll('.MultiCarousel'),
slidePre = '',
slidePost = '',
slideItem = '',
numberOfSlides = '',
clonedPre,
clonedPost,
slide_length = '',
slider_dots = '',
autoplay = false,
infinite_loop = false,
autoplay_delay = false,
center_slide_scale = false,
show_active_dots = false,
autoplay_timeout = '';


for (let i = 0; i < sliderSelector.length; i++) {
  section_id = sliderSelector[i].getAttribute('data-sliderId');
  var itemsMainDiv = ('.MultiCarousel.' + section_id);
var selector = 'MultiCarousel_' + section_id;
  var itemsDiv = '.MultiCarousel-inner.' + section_id;
  var itemWidth = "";
  autoplay = JSON.parse(document.querySelector(itemsMainDiv).getAttribute('data-autoplay'));
  autoplay_timeout = JSON.parse(document.querySelector(itemsMainDiv).getAttribute('data-autoplay-timeout'));
  infinite_loop = JSON.parse(document.querySelector(itemsMainDiv).getAttribute('data-loop'));
  center_slide_scale = JSON.parse(document.querySelector(itemsMainDiv).getAttribute('data-centerSlideScale'));
  show_active_dots = JSON.parse(document.querySelector(itemsMainDiv).getAttribute('data-showActiveDots'));
  slidePre = document.createDocumentFragment();
  slidePost = document.createDocumentFragment();
  slideItem = document.querySelectorAll(itemsDiv + ' .item');
  slide_length = slideItem.length;
  slider_dots = $(itemsDiv).siblings('.MultiCarousel_dots_container').children('.multiCarousel_dots');
  let leftBth = '#' + selector + ' .leftLst';
  let RightBth = '#' + selector + ' .rightLst';

for(var l = 0 ; l < slideItem.length; l++) {
  slideItem[l].setAttribute('data-index', [l]);
}

  $(RightBth).click(function () {
    click(1, this)
  });

  $(leftBth).click(function () {
      var condition = $(this).hasClass("leftLst");
      if (condition)click(0, this);
  });

$('.multiCarousel_dots').click(function () {
  var curr = $(this).attr('data-index');
  changeCurrent(curr, this);
});


 ResCarouselSize(itemsMainDiv, selector);


  $(window).resize(function () {
      ResCarouselSize(itemsMainDiv, selector);
  });
  if(autoplay){
  slideAutoplay(itemsMainDiv , autoplay_timeout);
  }
  //this function define the size of the items
  function ResCarouselSize(itemsMainDiv, selector) {
      var incno = 0;
      var dataItems = ("data-items");
      var itemClass = ('.item');
      var id = 0;
      var btnParentSb = '';
      var itemsSplit = '';
      var sampwidth = $(itemsMainDiv).width();
      var bodyWidth = $('body').width();
      $(itemsDiv).each(function () {
          id = id + 1;
          var itemNumbers = $(this).find(itemClass).length;
          btnParentSb = $(this).parent().attr(dataItems);
          itemsSplit = btnParentSb.split(',');
          $(this).parent().attr("id", selector + id);
          
          let desktop_slide = JSON.parse(document.querySelector(itemsMainDiv).getAttribute('data-responsive_desk_items'));
          let mid_slide = JSON.parse(document.querySelector(itemsMainDiv).getAttribute('data-responsive_mid_items'));
          let mobile_slide = JSON.parse(document.querySelector(itemsMainDiv).getAttribute('data-responsive_Small_items'));
          if (bodyWidth >= 992) {
              incno = desktop_slide;
              itemWidth = sampwidth / incno;
          }
          else if (bodyWidth >= 768) {
              incno = mid_slide;
              itemWidth = sampwidth / incno;
          }
          else {
              incno = mobile_slide;
              itemWidth = sampwidth / incno;
          }
          $(this).addClass('MultiCarousel_loaded');
          if(incno > 1){
          for(var j = 1 ; j <= incno-1; j++) {
            slider_dots[slider_dots.length-j].remove();
          }
          let centerIndex = Math.floor(incno / 2);
          $(this).find(itemClass)[centerIndex].classList.add('center');
          }

          for(var k = 0 ; k <= incno-1; k++) {
            $(this).find(itemClass)[k].classList.add('active');
            if(!center_slide_scale || incno == 1){
            slider_dots[k].classList.add('active');
          }
          }

          $(this).css({ 'transform': 'translateX(0px)', 'width': itemWidth * itemNumbers });
          $(this).find(itemClass).each(function () {
              $(this).outerWidth(itemWidth);
          });
          if(autoplay == false && infinite_loop == false) {
          $(".leftLst").addClass("over");
          $(".rightLst").removeClass("over");
          }
          
      });
  }


  //this function used to move the items
  function ResCarousel(e, el, s, slide_container) {
      var leftBtn = ('.leftLst');
      var rightBtn = ('.rightLst');
      var itemClass = ('.item');
      var translateXval = '';
      var divStyle = $(slide_container).css('transform');
      var slider_item = $(slide_container).find(itemClass);
      var slider_dots = $(el).find('.multiCarousel_dots');
      
      var values = divStyle.match(/-?[\d\.]+/g);
      var xds = Math.abs(values[4])
      var itemWidth = $(slide_container).children().innerWidth();
      var itemsCondition = $(slide_container).width() - $(el).width();
      var itemsCondition_lastSlide = $(slide_container).width() - $(el).innerWidth();
      var active_slide = $(slide_container).find('.active');
      var active_slide_number = active_slide.length;
      var slider_dots_length = slider_dots_length;
      let counter = 0;
      center_slide_scale = JSON.parse(document.querySelector(el).getAttribute('data-centerSlideScale'));

      // Slider dots for multiple items have some work left to do. And active slide on right click have some work left to do.
      if(active_slide.length > 1){
        // active_slide = $(slide_container)[0];
        // active_slide.classList.add('active');
      slider_dots_length = slider_dots_length - active_slide_number - 1;
      }
      function active_slider_dots(e){

        if(e == 0){
      var active_slide_position = parseInt(active_slide[active_slide_number - 1].dataset.index) - 1;
      if(active_slide_position < 0){
        active_slide_position = slider_item.length - 1;
      }
      let centerIndex = active_slide_position;
      let centerFlag = true;
      slider_item.removeClass("active");
      slider_item.removeClass("center");
      if(!center_slide_scale || active_slide_number == 1){
      slider_dots.removeClass("active");
      }
        for(var k = 0 ; k < slider_item.length; k++) {
        if(k == active_slide_position){ 
          for(var j = 0 ; j < active_slide_number; j++) {
            if(k - active_slide_number + 1 >= 0){
              counter = k - j; 
            }else{
              counter = slider_item.length - j - 1; 
            }
          slider_item[counter].classList.add('active');
          if(!center_slide_scale || active_slide_number == 1){
          slider_dots[counter].classList.add('active');
          }
          if(active_slide_number > 1 && active_slide_number%2 !== 0 && centerFlag){
            centerIndex = Math.floor(active_slide_number / 2);
            slider_item[counter - centerIndex].classList.add('center');
            centerFlag = false;
          }     
          }
        }     
      }

    }else if(e == 1){
      var active_slide_position = parseInt(active_slide[0].dataset.index) + 1;
      if(active_slide_position > slider_item.length - 1){
        active_slide_position = 0;
      }
      let centerIndex = active_slide_position;
      let centerFlag = true;
      slider_item.removeClass("active");
      slider_item.removeClass("center");
      if(!center_slide_scale || active_slide_number == 1){
      slider_dots.removeClass("active");
      }
        for(var k = 0 ; k < slider_item.length; k++) {
        if(k == active_slide_position){ 
          for(var j = 0 ; j < active_slide_number; j++) {
            if(k + active_slide_number - 1 < slider_item.length){
              counter = k + j; 
            }else{
              counter = j; 
            }
          slider_item[counter].classList.add('active');
          if(!center_slide_scale || active_slide_number == 1){
          slider_dots[counter].classList.add('active');
          }
          if(active_slide_number > 1 && active_slide_number%2 !== 0 && centerFlag){
            centerIndex = Math.floor(active_slide_number / 2);
            slider_item[counter + centerIndex].classList.add('center');
            centerFlag = false;
          }  
          }
        }     
      }
    }else{
      var active_slide_position = parseInt(active_slide[0].dataset.index);
    }
    }
    active_slider_dots(e);
      if (e == 0) {
          translateXval = parseInt(xds) - parseInt(itemWidth * s);
          if(autoplay == false && infinite_loop == false) {
          $(el + ' ' + rightBtn).removeClass("over");
          }

          if (translateXval < 0 - itemWidth / 2) {
            translateXval = itemsCondition_lastSlide;
          }else if (translateXval <= itemWidth / 2 ) {
            translateXval = 0;
            if(autoplay == false && infinite_loop == false) {
            $(el + ' ' + leftBtn).addClass("over");
            }
          }
      }
      else if (e == 1) {
          translateXval = parseInt(xds) + parseInt(itemWidth * s);
          if(autoplay == false && infinite_loop == false) {
          $(el + ' ' + leftBtn).removeClass("over");
          }

          if (translateXval > itemsCondition) {
            translateXval = 0;
          }else if(translateXval > itemsCondition - itemWidth / 2){
              translateXval = itemsCondition_lastSlide;
              if(autoplay == false && infinite_loop == false) {
              $(el + ' ' + rightBtn).addClass("over");
              }
          }
      }else{
        translateXval = parseInt(itemWidth * s);
        if (translateXval > itemsCondition - itemWidth / 2) {
          translateXval = itemsCondition_lastSlide;
        }else if (translateXval <= itemWidth / 2) {
          translateXval = 0;
        }
        if(!center_slide_scale || active_slide_number == 1){
          slider_dots.removeClass("active");
        slider_dots[s].classList.add('active');
      } 
      }

      $(slide_container).css('transform', 'translateX(' + -translateXval + 'px)');
  }

  //It is used to get some elements from btn
  function click(ell, ee) {
      var Parent = "#" + $(ee).parent().attr("id");
      var slide = $(Parent).attr("data-slide");
      var slide_container = $(Parent).children('.MultiCarousel-inner');
      autoplay_delay = true;
      setTimeout(function() {autoplay_delay = false},5000);
      ResCarousel(ell, Parent, slide, slide_container);
  }

  /* slide number click function */  

function changeCurrent(curr, dot) {
  var Parent = "#" + $(dot).parent().parent().attr("id");
  var slide_container = $(Parent).children('.MultiCarousel-inner');
  autoplay_delay = true;
  setTimeout(function() {autoplay_delay = false},5000);
ResCarousel(e=null, Parent, curr, slide_container);
}

function slideAutoplay(selector , duration) {
var newIndex = $(selector).attr("data-slide");
var slides_container = $(selector).children('.MultiCarousel-inner');

setInterval(function() {
  if(!autoplay_delay){
  ResCarousel(1, selector, newIndex, slides_container);
}
}, duration);
}


let target = document.querySelector('.MultiCarousel-inner.' + section_id);
function sliderDrag(event, slide_direction) {
  if(event.target.offsetParent.classList.contains('draggable')){
    var Parent = "#" + event.target.offsetParent.parentElement.id;
  }else{
    var Parent = "#" + event.target.parentElement.id;
  }
      var slide = $(Parent).attr("data-slide");
      var slide_container = $(Parent).children('.MultiCarousel-inner');
      autoplay_delay = true;
      setTimeout(function() {autoplay_delay = false},5000);
        ResCarousel(slide_direction, Parent, slide, slide_container);
  }



var oldX = 0;
var oldY = 0;
target.addEventListener('dragstart', (e) => {
  oldX = e.pageX;
  oldY = e.pageY;
});

target.addEventListener('touchstart', (e) => {
  oldX = e.changedTouches[0].pageX;
  oldY = e.changedTouches[0].pageY;
});

target.addEventListener("dragend", getMouseDirection, false);

target.addEventListener('touchend', (event) => {
  let touch_event = event.changedTouches[0]; 
  getMouseDirection(touch_event)
});

var xDirection = "";
var yDirection = "";

function getMouseDirection(e) {
    //deal with the horizontal case
    if (oldX < e.pageX) {
        xDirection = "right";
    } else {
        xDirection = "left";
    }
 
    //deal with the vertical case
    if (oldY < e.pageY) {
        yDirection = "down";
    } else {
        yDirection = "up";
    }
 
    oldX = e.pageX;
    oldY = e.pageY;

 if(xDirection == "right"){
  sliderDrag(e, 0)
 }else{
  sliderDrag(e, 1)
 }
    // console.log(xDirection + " " + yDirection);
}

}

});

