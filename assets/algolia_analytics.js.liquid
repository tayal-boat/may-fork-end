(function (algolia) {
	'use strict';
	var aa = algolia.externals.aa;

	var enabled = algolia.config.analytics_enabled;
	if (!enabled) return;

	aa.init({
		appId: algolia.config.app_id,
		apiKey: algolia.config.search_api_key,
	});

	const localStorageKey = 'algolia_analytics_clicked_objects';

	/**
	 * Saves details in local storage for conversion tracking
	 */
	algolia.saveForConversionTracking = function (data) {
		/**
		 * We're using a try, catch here to handle any possible exceptions
		 * resulting from local storage or JSON parsing.
		 */
		try {
			// Get any data previously stored
			const previousClickItemsString = localStorage.getItem(localStorageKey) || '[]';
			const previousClickItems = JSON.parse(previousClickItemsString);

			var conversionData = data;

			// Changing the event to 'convert' from 'click'
			conversionData.eventName = 'convert';
			// Removing the `positions` property
			delete conversionData.positions;

			// Add the current products data to local storage
			previousClickItems.push(conversionData);
			localStorage.setItem(localStorageKey, JSON.stringify(previousClickItems));
		} catch (error) {
			// No need to do anything in this scenario
		}
	};

	

	
  
function trackConversion() {
	console.log('hii 2');
	try {
	  // Get any previously stored data.
	  const previousClickItemsString = localStorage.getItem(localStorageKey)
	  // If data was found, send a conversion event for those products.
	  console.log(previousClickItemsString);
	  if (!!previousClickItemsString) {
		const previousClickItems = JSON.parse(previousClickItemsString)
		previousClickItems.forEach((data) => {
		  aa('convertedObjectIDsAfterSearch', data)
		  console.log(data);
		})
		console.log(previousClickItems);
	  }
	} catch (error) {
	  // No need to do anything in this scenario.
	}
  
	// Try to remove the items from local storage.
	try {
	  localStorage.removeItem(localStorageKey)
	  console.log(localStorageKey);
	} catch (error) {
	  // No need to do anything in this scenario.
	}
  }
  
  $(document).on("click", ".custom-search-cta", function(e) {
	e.preventDefault();
	var t = $(this).parents("form").serialize();
	$.ajax({
		url: "/cart/add.js",
		dataType: "json",
		cache: !1,
		type: "post",
		data: t,
		success: function(e) {
			document.documentElement.dispatchEvent(new CustomEvent("cart:refresh", {
				bubbles: !0
			})), document.getElementById("mini-cart").open = !0, document.querySelector("body").classList.add("noScroll"), $(".search-clear-icon").css('display', 'flex'), setTimeout(function() {
				$(".header__cart-count").html($("#mini-cart input.cart--count").val());
				console.log('hii');
				trackConversion();
			}, 1500)
		}
	})
  });

  
})(window.algoliaShopify);
