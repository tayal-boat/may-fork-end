/* See https://www.algolia.com/doc/integration/shopify/advanced-customization/customizing-instant-search/#hogan */



(function(algolia) {
  'use strict';
  var Hogan = algolia.externals.Hogan;
  var formatPrice = function formatPrice(value) {
    return algolia.formatMoney(Number(value) * 100);
  };

  function formattedPriceWithComparison(price, compare_at_price, price_ratio) {
    var comparing = Number(compare_at_price) && Number(compare_at_price) > Number(price);
    var discount_ratio = 1.0 - price_ratio;
    var res = '<b>' + formatPrice(price) + '</b>';
    if (comparing) {
      res = ' <span style="color:#05A143;font-size:14px;">' + Math.floor(discount_ratio * 100) + '% off </span>'
    + '<b style="padding-left:8px;">' + formatPrice(price) + '</b>'
         + ' <span class="ais-hit--price-striked">' + formatPrice(compare_at_price) + '</span> '
    }
 
    return res;
  }

  var escapeHtml = function escapeHtml(unsafe) {
    return (unsafe || '')
      .replace(/&/g, '&amp;')
      .replace(/</g, '&lt;')
      .replace(/>/g, '&gt;')
      .replace(/"/g, '&quot;')
      .replace(/'/g, '&#039;');
  };

  algolia.helpers = {
    formatNumber: function formatNumber(text, render) {
      return Number(render(text)).toLocaleString();
    },
    formattedPrice: function formattedPrice(text, render) {
      return formatPrice(render(text));
    },
    formattedPriceWithoutDecimals: function formattedPriceWithoutDecimals(
      text,
      render
    ) {
      return formatPrice(render(text)).replace(/\.\d+$/, '');
    },
    autocompletePrice: function autocompletePrice() {
      if (this._distinct) {
        var min = this.variants_min_price;
        var max = this.variants_max_price;
        if (min !== max) {
          return '<b>' + formatPrice(min) + ' - ' + formatPrice(max) + '</b>';
        }
      }
      return formattedPriceWithComparison(this.price, null);
    },
    instantsearchPrice: function instantsearchPrice() {
      if (this._distinct) {
        var min = this.variants_min_price;
        var max = this.variants_max_price;
        if (min !== max) {
          return '<b>' + formatPrice(min) + ' - ' + formatPrice(max) + '</b>';
        }
      }
      return formattedPriceWithComparison(
        this.price,
        this.compare_at_price,
        this.price_ratio
      );
    },
    instantsearchLink: function instantsearchLink() {
      var addVariantId = !this._distinct && this.objectID !== this.id;
      return (
        '/products/' +
        this.handle +
        (addVariantId ? '?variant=' + this.objectID : '')
      );
    },
    fullTitle: function fullTitle() {
      var res = this.title.split('|')[0];
      if (res.includes('boAt')){
       res = res.split('boAt')[1];
      }
      if (
        !this._distinct &&
        this.variant_title &&
        this.variant_title !== 'Default Title' &&
        this.variant_title !== 'Default'
      ) {
        res += ' (' + this.variant_title + ')';
      }

      return escapeHtml(res);
    },
    youSavePrice: function inventory() {
      var res = '';
      var compare_at_price = this.compare_at_price;
      var price = this.price;
      var price_ratio = this.price_ratio;
      var discount_ratio = 1.0 - price_ratio;
      if (price >= 500 ) {
       res += ' <p class="ais-hit--price-discount">Save ‚Çπ15 more on UPI payment</p>';
      } else {
        res += ' <p class="ais-hit--price-discount">Free Shipping available</p>';
      }
      // res += ' <p class="ais-hit--price-discount"> You Save: ' + formatPrice(compare_at_price - price ) + ' (' +
      //   Math.floor(discount_ratio * 100) +
      //   '%)</p>';
       return res;
    },
    inventory: function inventory() {
      var res = this.inventory_available;
      var flashSale = '';
      var free = '';
      if(this.tags.includes('flash-sale')){
        flashSale = 'flash-sale';
      }
      if(this.tags.includes('Free-Earphones')){
      free = '<input class="flash_sale_enable" type="hidden" name="properties[Free]" value="true">';
      }
      if(this.inventory_available) {
        res = ` ${free} <input name="add" value="Add to cart" type="submit" class="custom-search-cta add-to-cart-button ' + ${flashSale} + '" />`;
      }else{
      if(this.tags.includes('Coming-Soon')){
        res = '<input name="add" value="Coming Soon" type="submit" class="custom-search-cta sold-out" />';
      }else{
      res = '<input name="add" value="Sold out" type="submit" class="custom-search-cta sold-out" />';
      }
      }
      return res;
    },
      reviews: function reviews() {
      var res = '';
      var reviews = this.meta.reviews;
      if(reviews){
      var rating = reviews.rating; 
        rating = JSON.parse(rating);
      var rating_value = rating.value;
        rating_value =  Math.round(rating_value * 10) / 10;
      var rating_count = reviews.rating_count;
      res = `<div class="rating"><div class="rating__stars" role="img" aria-label="${rating_value} out of 5.0 stars">
            <span style="color:#05A143;font-size:16px;">‚òÖ</span>
    ${rating_value} </div> <span class="rating__caption">${rating_count} reviews</span>
  </div>`;  
      }else{
        res = `<div class="rating"><div class="rating__stars" role="img" >
        <span style="color:#05A143;font-size:16px;">‚òÖ</span>
       Be the first to review
    </div></div>`
      }
     return res;
    },
    imageClass: function imageClass() {
      var res_class = ''
      if(this.inventory_available) {
        res_class = 'aa-product-image'
      } else {
        res_class = 'aa-product-image sold-out'
      }
      return res_class;
    },
    badge: function badge() {
      var res = '';
      var res_class = '';
      // console.log(this);
      var tags = this.tags;
      var price_ratio = this.price_ratio;
      var comparing =
      Number(this.compare_at_price) && Number(this.compare_at_price) > Number(this.price);
    var discount_ratio = 1.0 - price_ratio;
    if(this.inventory_available){
      var response = '';
          for (let i = 0; i < tags.length ; i++) {
            if(tags[i].includes( 'Free-' ) ){
              res = `üéÅ ${tags[i].replace('-',' ')}`;
              res_class = 'free-label label bg-green z-10';
              response  = response + `<div class="aa-product-badge ${res_class} "> ${res} </div>`;
            }
            else if(tags[i].includes('Coupon-') ){
              res = `‚Çπ ${tags[i].replace('Coupon-',' ').split('|')[0]} OFF ON ${tags[i].replace('Coupon-',' ').split('|')[1]}`;
              res_class = 'coupon-label label bg-green z-9';
              response  = response + `<div class="aa-product-badge ${res_class} "> ${res} </div>`;
            }
            else if(tags[i].includes('flash-sale') && comparing){
              res = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-lightning-fill flash-sale-thunder pr-1" viewBox="0 0 16 16">
              <path d="M5.52.359A.5.5 0 0 1 6 0h4a.5.5 0 0 1 .474.658L8.694 6H12.5a.5.5 0 0 1 .395.807l-7 9a.5.5 0 0 1-.873-.454L6.823 9.5H3.5a.5.5 0 0 1-.48-.641l2.5-8.5z"/>
            </svg> SUPER SAVER`;
               res_class = 'flash-sale-badge z-8';
               response  = response + `<div class="aa-product-badge ${res_class} "> ${res} </div>`;
            }
            else if(tags[i].includes('meta-label-Bestseller')){
                res = `üöÄ ${tags[i].replace('meta-label-',' ')}`;
                res_class = 'label bg-orange z-7';  
                response  = response + `<div class="aa-product-badge ${res_class} "> ${res} </div>`; 
            }
            else if(tags[i].includes('meta-label-trending')){
              res = `<img src="https://cdn.shopify.com/s/files/1/0057/8938/4802/files/fire_icon_5b106718-91ee-4406-961e-33b11cbae6e5.png?v=1666348762" style="width: 15px;position: unset;margin-right: 4px;transform:unset" /> ${tags[i].replace('meta-label-',' ')}`;
              res_class = 'label bg-orange z-6';   
              response  = response + `<div class="aa-product-badge ${res_class} "> ${res} </div>`;
            }
            else if(tags[i].includes('meta-label-exclusive')) {
                res = `üíù LIMITED EDITION`;
                res_class = 'label bg-purple z-5'; 
                response  = response + `<div class="aa-product-badge ${res_class} "> ${res} </div>`;   
            }            
            else if(tags[i].includes('meta-label-just launched')) {
                res = `üéâ NEW LAUNCH`;
                res_class = 'label bg-purple z-4';   
                response  = response + `<div class="aa-product-badge ${res_class} "> ${res} </div>`;   
            }
            else if(tags[i].includes('Feature|')) {
                res = `${tags[i].replace('Feature|',' ')}`;
                res_class = ' label bg-black z-3';
                response  = response + `<div class="aa-product-badge ${res_class} "> ${res} </div>`;       
            }
            else if(tags[i].includes('meta-label-')) {
              res = `${tags[i].replace('meta-label-',' ')}`;
              res_class = ' label bg-black z-2';     
              response = response + `<div class="aa-product-badge ${res_class} "> ${res} </div>`;
            }
            else if(tags[i].includes('meta-label-sold')) {
              res = '';
              response = "";
            }
          }
    } else {
      var response = `<div class="aa-product-badge sold-out">SOLD OUT</div>`;
    }
   return response;
    },
    fullHTMLTitle: function fullHTMLTitle() {
      var res = '';

      if (this._highlightResult.title && this._highlightResult.title.value) {
        res = algolia.helpers.fullEscapedAttribute(
          this._highlightResult.title.value
        );
      }

      if (
        !this._distinct &&
        this.variant_title &&
        this.variant_title !== 'Default Title' &&
        this.variant_title !== 'Default'
      ) {
        res += ' <span class="algolia-variant">(' + res + ')</span>';
      }
      return res;
    },
    fullEscapedAttribute(attribute) {
      return new DOMParser().parseFromString(attribute, 'text/html')
        .documentElement.textContent;
    },
    fullEscapedHTMLTitle: function fullEscapedHTMLTitle() {
      var res = '';

      if (this._highlightResult.title && this._highlightResult.title.value) {
        res = algolia.helpers.fullEscapedAttribute(
          this._highlightResult.title.value
        );
      }

      if (
        !this._distinct &&
        this.variant_title &&
        this.variant_title !== 'Default Title' &&
        this.variant_title !== 'Default'
      ) {
        res += ' <span class="algolia-variant">(' + res + ')</span>';
      }
      return res;
    },
    fullEscapedHTMLProductType: function fullEscapedHTMLProductType() {
      if (
        this._highlightResult.product_type &&
        this._highlightResult.product_type.value
      ) {
        return algolia.helpers.fullEscapedAttribute(
          this._highlightResult.product_type.value
        );
      } else {
        return '';
      }
    },
    fullEscapedHTMLVendor: function fullEscapedHTMLVendor() {
      if (this._highlightResult.vendor && this._highlightResult.vendor.value) {
        return algolia.helpers.fullEscapedAttribute(
          this._highlightResult.vendor.value
        );
      } else {
        return '';
      }
    },
    floor: function floor(text, render) {
      return '' + Math.floor(Number(render(text)));
    },
    ceil: function ceil(text, render) {
      return '' + Math.ceil(Number(render(text)));
    },
    sizedImage: function sizedImage(text, render) {
      var image = this._distinct ? this.product_image : this.image;
      if (!image) {
        return 'http://cdn.shopify.com/s/images/admin/no-image-compact.gif';
      }
      var size = render(text).replace(/^\s+|\s+$/g, ''); // Render and trim
      if (size === 'original') {
        return image;
      }
      return image.replace(/\/(.*)\.(\w{2,4})/g, '/$1_' + size + '.$2');
    },
  };

  [
    'pico',
    'icon',
    'thumb',
    'small',
    'compact',
    'medium',
    'large',
    'grande',
    'original',
  ].forEach(function(size) {
    algolia.helpers[size + 'Image'] = (function(_size) {
      return function() {
        var image = this._distinct ? this.product_image : this.image;

        if (!image) {
          return 'http://cdn.shopify.com/s/images/admin/no-image-compact.gif';
        }

        if (_size === 'original') {
          return image;
        }

        return image.replace(/\/(.*)\.(\w{2,4})/g, '/$1_' + _size + '.$2');
      };
    })(size); // We need to create a new scope so that the internal size has the good value.
  });

  /* Create an Hogan lambda, which doesn't respect the mustache doc */
  var helpers = algolia.assign(
    {},
    algolia.helpers,
    algolia.translation_helpers
  );
  var helpersNames = Object.keys(helpers);
  var i = helpersNames.length;
  var helpersArray = new Array(i);
  while (i--) helpersArray[i] = [helpersNames[i], helpers[helpersNames[i]]];
  
  algolia.hoganHelpers = helpersArray.reduce(function(res, options) {
    var name = options[0];
    var helper = options[1];

    var newRes = algolia.assign({}, res);

    newRes[name] = function() {
      return function(text) {
        var render = function(value) {
          return Hogan.compile(value, algolia.hoganOptions).render(this);
        }.bind(this);

        return helper.call(this, text, render);
      }.bind(this);
    };
    return newRes;

  }, {});
})(window.algoliaShopify);