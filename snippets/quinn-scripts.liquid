{% assign quinn_playlists = shop.metafields.quinn_playlists %}
{% assign settings = shop.metafields.quinn_settings.global %}
{% assign load_script = true %}

{% assign page_type = template.name %}
{% assign page_handle = '' %}

{% if page_type == 'collection' %}
  {% assign page_handle = collection.handle %}
{% elsif page_type == 'product' %}
  {% assign page_handle = product.handle %}
{% elsif page_type == 'page' %}
  {% assign page_handle = page.handle %}
{% elsif page_type == 'index' %}
  {% assign page_handle = 'index' %}  
{% endif %}

{% if settings.disable_all_page_script %}
  {% assign load_script = false %}

  {% for current_playlist in quinn_playlists %}
    {% for page in current_playlist[1].exclude_pages %}
      {% if page.type == page_type and page.handle == page_handle %}
        {% assign exclude_page = true %}
        {% break %}
      {% endif %}
      {% if page.type == page_type and page.handle == 'quinn_all' %}
        {% assign exclude_page = true %}
        {% break %}
      {% endif %}
    {% endfor %}

    {% if exclude_page %}
      {% continue %}
    {% endif %}

    {% for page in current_playlist[1].pages %}
      {% if page.type == 'all' %}
        {% assign load_script = true %}
        {% break %}
      {% endif %}
      {% if page.type == page_type and page.handle == page_handle %}
        {% assign load_script = true %}
        {% break %}
      {% endif %}
      {% if page.type == page_type and page.handle == 'quinn_all' %}
        {% assign load_script = true %}
        {% break %}
      {% endif %}
    {% endfor %}
  {% endfor %}
{% endif %} 

{% if page_type == 'index' %}
  {% assign page_type = 'home' %}
  {% assign page_handle = nil %}
{% endif %}

<script>
  window.Quinn = {}
  Quinn.debug_logs = {{ shop.metafields.quinn_settings.debug_logs | json }} == 'true';
  Quinn.cart = {{ cart | json }}
  Quinn.shop_domain = {{ shop.permanent_domain | json }}
  Quinn.page_type = {{ page_type | json }}
  Quinn.page_handle = {{ page_handle | json }}
  Quinn.currency_symbol = {{ settings.general.currency_symbol | json }} || {{ cart.currency.symbol | json }},
  Quinn.NetworkInterceptor = {{ settings.enable_interceptor | json  }};
  Quinn.ABTestMode = {{ settings.ab_testing | json  }};
  Quinn.ABTestId = {{ settings.ab_testing_id | json }};
  Quinn.PageTracking = {{ settings.page_tracking | json  }};
  Quinn.CartTracking = {{ settings.cart_tracking | json  }};
  Quinn.AppSettings = {{ settings | json }};
  Quinn.ProductPage = {{ product | json }};
  Quinn.AppReady = true;

  if(Quinn.NetworkInterceptor){
    const origFetch = window.fetch;
    window.fetch = async (...args) => {
      const response = await origFetch(...args);
      if(Quinn.interceptorCallback){
        Quinn.interceptorCallback.Fetch(response.url, response, origFetch);
      }
      return response;
    };

    (function (XHR) {
      let send = XHR.prototype.send;
        XHR.prototype.send = function (data) {
          let oldOnReadyStateChange;

          function onReadyStateChange() {
            if (this.readyState === 4 && Quinn.interceptorCallback) {
              Quinn.interceptorCallback.XHR(this._url, this.response, XHR);
            }
            if (oldOnReadyStateChange) oldOnReadyStateChange();
          }

          /* Set xhr.noIntercept to true to disable the interceptor for a particular call */
          if (!this.noIntercept) {
            if (this.addEventListener) {
              this.addEventListener("readystatechange", onReadyStateChange, false);
            } else {
              oldOnReadyStateChange = this.onreadystatechange;
              this.onreadystatechange = onReadyStateChange;
            }
          }
          send.call(this, data);
        };
      })(XMLHttpRequest);
  }
</script>
<script>
function addPropertiesToProductForm() {
  let products = localStorage.getItem("_quinn-products-viewed");
  if (Quinn.NetworkInterceptor || !products) return;

  products = JSON.parse(products);
  products = products.filter(
    (product) =>
      product.timestamp &&
      Date.now() < product.timestamp + 15 * 24 * 60 * 60 * 1000
  );

  const forms = document.querySelectorAll('form[action="/cart/add"]');
  forms.forEach((form) => {
    // const formId = form.attributes.id.value;
    const productIdInput = form.querySelector('input[name="id"]');

    let productViewed = false;
    let properties = "";

    if (Quinn.ProductPage) {
      productViewed = products.find(
        (product) =>
          product.productid === Quinn.ProductPage.id ||
          product.variants.includes(Quinn.ProductPage.id)
      );
    } else if (productIdInput) {
      const productId = parseInt(productIdInput.value);
      productViewed = products.find(
        (product) =>
          product.productid === productId ||
          product.variants.includes(productId)
      );
    }

    const distinctid = localStorage.getItem("_quinn_guid");
    const sessionid = sessionStorage.getItem("_quinn_session_id");
    const commonid = localStorage.getItem("_quinn_common_id");

    if (productViewed) {
      const pagetype = productViewed.pagetype || Quinn.page_type;
      const pagepath =
        pagetype != "home" ? productViewed.pagepath || Quinn.page_handle : null;
      properties = JSON.stringify({
        distinctid,
        sessionid,
        commonid,
        pagetype,
        pagepath,
        widgettype: productViewed.widgettype,
        type: "influenced",
      });
    } else if (Quinn.ABTestMode || Quinn.CartTracking)
      properties = JSON.stringify({
        distinctid,
        sessionid,
        commonid,
        pagetype: Quinn.page_type,
        pagepath: Quinn.page_handle,
        type: "other",
      });

    if (!properties) return;
    const inputNode = document.createElement("input");
    inputNode.setAttribute("type", "hidden");
    inputNode.setAttribute("name", "properties[_quinn-properties]");
    inputNode.setAttribute("value", properties);
    form.appendChild(inputNode);
  });
}

document.addEventListener("DOMContentLoaded", addPropertiesToProductForm);
</script>

{% if load_script or settings.ab_testing %}
  {% comment %}   <script src="{{ 'quinn-live.bundle.js' | asset_url }}" async></script> {% endcomment %}
<script>
  function script(url) {
        var s = document.createElement('script');
        s.type = 'text/javascript';
        s.async = true;
        s.src = url;
        var x = document.getElementsByTagName('head')[0];
        x.appendChild(s);
    }

    window.addEventListener("load", function(){
    sessionStorage.setItem('quinn-live.bundle','false'); 
    document.addEventListener("touchmove", ScrollStart);
    document.addEventListener("scroll", ScrollStart);
    function ScrollStart() {
    if(sessionStorage.getItem('quinn-live.bundle') == 'false'){
      script("{{ 'quinn-live.bundle.js' | asset_url }}");
      sessionStorage.setItem('quinn-live.bundle','true'); 
    }
    }
  });
    
</script>
{% endif %}