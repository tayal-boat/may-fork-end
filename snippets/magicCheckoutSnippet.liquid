    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>

<script src="https://cdn.razorpay.com/static/shopify/modal.js" data-merchant-name="boAt"></script>

<script>


var inProgress = false;
var rzpMerchantKey = "rzp_live_iCBWgJBHr7vDrd";

function openRzpCheckout(e) {
    if (e && e.preventDefault) {
        console.log("e detected");
        e.preventDefault();
    }

    if (!rzpCanCheckout()) {
        return;
    }

    window.MagicCheckout.showModal();

    fetch("/cart.js")
        .then(function(cartRes) {
            if (cartRes.status !== 200) {
                return Promise.reject("Error fetching cart");
            }
            return cartRes.json();
        })
        .then(function(cart) {
            if (cart.total_price === 0 || cart.items.length === 0) {
                return Promise.reject("Your cart is empty, add an item to continue");
            }
            // return fetch("/apps/rzp_1cc/checkout?key_id=" + rzpMerchantKey, {
            //     method: "POST",
            //     headers: {
            //     "Accept": "application/json",
            //     "Content-Type": "application/json"
            //     },
            //     body: JSON.stringify({ cart: cart, key: rzpMerchantKey }),
            // });

            return fetch("https://api.razorpay.com/v1/1cc/shopify/checkout?key_id=" + rzpMerchantKey, {
                method: "POST",
                headers: {
                  "Accept": "application/json",
                  "Content-Type": "application/json"
                },
                body: JSON.stringify({ cart: cart, key: rzpMerchantKey }),
            });
        })
        .then(function(checkRes) {
            if (checkRes.status >= 500) {
                return Promise.reject("Error creating an order");

            } else if (checkRes.status >= 400) {
                return Promise.reject("Error creating an order");
            }
            return checkRes.json();
        })
        .then(function(params) {
            if (typeof params.customer_cart !== "undefined"){
                params.customer_cart.content_ids = params.customer_cart.contents.map((item) => item.variant_id);
                params.customer_cart.num_items = params.customer_cart.contents.length;
            }
            openModal(params);
        })
        .catch(function(e) {
            console.log(e);
            window.MagicCheckout.hideModal();
            if (typeof e === "string") {
                alert(e);
            } else {
                alert("Something went wrong, please try again after some time");
            }
        });
}

function toggleLoader(flag) {
    if (flag) {
        document.getElementById("rzp-spinner-backdrop").classList.add("show");
        document.getElementById("rzp-spinner").classList.add("show");
        inProgress = true;
    } else {
        document.getElementById("rzp-spinner-backdrop").classList.remove("show");
        document.getElementById("rzp-spinner").classList.remove("show");
        inProgress = false;
    }
}

function rzpCanCheckout() {
   return !inProgress;
}

function handlePaymentRes(handlerRes) {
    var finalRes;
  	toggleLoader(true);
    fetch("/apps/rzp_1cc/complete?key_id="+ rzpMerchantKey , {
        method: "POST",
        headers: {
        "Accept": "application/json",
        "Content-Type": "application/json"
        },
        body: JSON.stringify({ ...handlerRes, key: rzpMerchantKey }),
    })
    .then(function(res) {
        if (res.status !== 200) {
            return Promise.reject("Your order could not be placed. If an amount was deducted, please contact the merchant to confirm your order");
        }
        return res.json();
    })
    .then(function(res) {
        finalRes = res;
        return fetch("/cart/clear.js", {
            method: "POST",
            headers: {
            "Accept": "application/json",
            "Content-Type": "application/json"
            },
            body: JSON.stringify({}),
        });
    })
    .then(function(res) {
        window.location = finalRes.order_status_url;
    })
    .catch(function (e) {
        if (finalRes && finalRes.order_status_url) {
            window.location = finalRes.order_status_url;
            return;
        }
      	toggleLoader(false);
        alert("Your order could not be placed. If an amount was deducted, please contact the merchant to confirm your order");
    });
}

function formSerialize(myDocument){
   var obj = {};
   var elements = myDocument.querySelectorAll( "input, select, textarea" );
   for( var i = 0; i < elements.length; ++i ) {
       var element = elements[i];
       var name = element.name;
       var value = element.value;
 
       if( name ) {
           obj[ name ] = value;
       }
   }
   return JSON.stringify( obj );
}


function makeXhr(method, url, data, track) { // for making requests
  var xhttp = new XMLHttpRequest();
  xhttp.open(method, url, true);
  xhttp.setRequestHeader("Content-type", "application/json");
  xhttp.onload = function() {
    var status = xhttp.status;
    var response = xhttp.response;
     track( status, response)
  };
  xhttp.send(data ? JSON.stringify(data) : null);
}

function addCartBuyNow() { // it will call when someone click on BuyNow button
  makeXhr('POST', '/cart/clear.js', '', function(statusCode) {
    var productForm = formSerialize(document.querySelector('[action="/cart/add"]'));
    var cartItems = JSON.parse(productForm);
    var isQtyCheck = document.getElementsByName('quantity');
    if(isQtyCheck.length > 0){
    	cartItems['quantity'] = document.getElementsByName("quantity")[0].value ?  document.getElementsByName("quantity")[0].value : 1 ;
    }
    makeXhr('POST', '/cart/add.js', cartItems, function(j){
     	openRzpCheckout(undefined);
    });
  });
}

function openModal(params) {
      params.config = {
        display : {
          sequence : [ "upi" ]
        }
      }

    var razorpayCheckout = new window.Razorpay({
        ...params,
        modal: {
            ondismiss: function() {
            }
        },
        handler: function(handlerRes) {
            try{
                if(window && window.fbq) {
                    window.fbq("track", "Purchase", params.customer_cart);
                }
            } catch(e){}
            handlePaymentRes(handlerRes);
        }
    });
    razorpayCheckout.open();
  	
    setTimeout(() => window.MagicCheckout.hideModal(), 2000);
}


</script>

    <input id="rzpKey" type="hidden" name="rzpKey" value="rzp_live_iCBWgJBHr7vDrd">
    
  
    
<div id="rzp-spinner-backdrop">
	<div id="rzp-spinner">
      <div id="loading-indicator"></div>
	</div>
</div>


<style>
  
  
    #rzp-spinner-backdrop {
    position: fixed;
    top: 0;
    left: 0;
    z-index: 9999999999;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0);
    visibility: hidden;
    opacity: 0;
  }
  #rzp-spinner-backdrop.show {
    visibility: visible;
    opacity: 0.4;
  }
  #rzp-spinner {
    visibility: hidden;
    opacity: 0;
    /* positioning and centering */
    position: fixed;
    left: 0;
    top: 0;
    bottom: 0;
    right: 0;
    margin: auto;
    z-index: 10000;
    display: flex !important;
    align-items: center;
    justify-content: center;
  }
  #rzp-spinner.show {
    visibility: visible;
    opacity: 1;
  }
  @keyframes rotate {
    0% {
      transform: rotate(0);
    }
    100% {
      transform: rotate(360deg);
    }
  }
  #loading-indicator {
    border-radius: 50%;
    width: 80px;
    height: 80px;
    border: 4px solid;
    border-color: rgb(59, 124, 245) transparent rgb(59, 124, 245) rgb(59, 124, 245) !important;
    animation: 1s linear 0s infinite normal none running rotate;
    margin-top: 2px;
    box-sizing: content-box;
  }
  
</style>
