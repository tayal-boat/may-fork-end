{% assign quinn_playlists = shop.metafields.quinn_playlists %}
{% assign quinn_media_groups = shop.metafields.quinn_media_groups %}
{% assign quinn_media = shop.metafields.quinn_media %}
{% assign custom_description = shop.metafields.quinn_custom_desc %}
{% assign products_description = shop.metafields.quinn_product_desc %}
{% assign settings = shop.metafields.quinn_settings.global %}
{% assign prepend_url = 'quinn_' %}
{% assign page_type = template.name %}
{% assign page_handle = '' %}
{% if page_type == 'collection' %}
  {% assign page_handle = collection.handle %}
{% elsif page_type == 'product' %}
  {% assign page_handle = product.handle %}
{% elsif page_type == 'page' %}
  {% assign page_handle = page.handle %}
{% elsif page_type == 'index' %}
  {% assign page_handle = 'index' %}
{% elsif page_type == 'blog' %}
  {% assign page_handle = blog.handle %}
{% endif %}
{{ shop.metafields.quinn_settings.custom_cart_update }}
{{ shop.metafields.quinn_settings.custom_cart_open }}
{{ shop.metafields.quinn_settings.currency_convertor }}
{% assign story_playlist = nil %}
{% assign card_playlists_ids = '' %}
{% assign card_playlist_targets = '' %}
{% assign floating_playlist = nil %}
{% for current_playlist in quinn_playlists %}
  {% assign found_data_map = false %}
  {% assign exclude_page = false %}
  {% for page in current_playlist[1].exclude_pages %}
    {% if page.type == page_type and page.handle == page_handle %}
       {% assign exclude_page = true %}
       {% break %}
    {% endif %}
    {% if page.type == page_type and page.handle == 'quinn_all' %}
       {% assign exclude_page = true %}
       {% break %}
    {% endif %}
  {% endfor %}
  {% if exclude_page %}
    {% continue %}
  {% endif %}
  {% for page in current_playlist[1].pages %}
    {% if page.type == 'all' %}
       {% assign found_data_map = true %}
       {% break %}
    {% endif %}
    {% if page.type == page_type and page.handle == page_handle %}
       {% assign found_data_map = true %}
       {% break %}
    {% endif %}
    {% if page.type == page_type and page.handle == 'quinn_all' %}
       {% assign found_data_map = true %}
       {% break %}
    {% endif %}
  {% endfor %}
  {% if found_data_map %}
    {% if current_playlist[1].type == 'story' and story_playlist == nil %}
      {% assign story_playlist = current_playlist[1] %}
    {% elsif current_playlist[1].type == 'cards'  %}
      {% assign card_playlist_target = current_playlist[1].target %}
      {% if card_playlist_target == nil %}
        {% assign card_playlist_target = 'quinn-cards-layer-1' %}
      {% endif %}
      {% assign card_targets = card_playlist_targets | split: "," %}
      {% unless card_targets contains card_playlist_target %}
        {% assign card_playlist_targets = card_playlist_targets | append: card_playlist_target | append: ',' %}
        {% assign card_playlists_ids = card_playlists_ids | append: current_playlist[1].id | append: ',' %}
      {% endunless %}
    {% elsif current_playlist[1].type == 'floating' and floating_playlist == nil %}
      {% assign floating_playlist = current_playlist[1] %}
    {% endif %}
  {% endif %}
{% endfor %}
{% assign all_handles = '' %}
{% assign card_playlists_ids = card_playlists_ids | split: "," %}
{% for media in story_playlist.media %}
  {% if media.type == 'group' %}
    {% for m in quinn_media_groups[media.key].media %}
      {% for product in quinn_media[m.key].products %}
        {% if product.handle %}
          {% assign all_handles = all_handles | append: product.handle | append: "," %}
        {% else %}
          {% assign all_handles = all_handles | append: product | append: "," %}
        {% endif %}
      {% endfor %}
    {% endfor %}
  {% else %}
    {% for product in quinn_media[media.key].products %}
      {% if product.handle %}
        {% assign all_handles = all_handles | append: product.handle | append: "," %}
      {% else %}
        {% assign all_handles = all_handles | append: product | append: "," %}
      {% endif %}
    {% endfor %}
  {% endif %}
{% endfor %}
{% for media in floating_playlist.media %}
  {% if media.type == 'group' %}
    {% for m in quinn_media_groups[media.key].media %}
      {% for product in quinn_media[m.key].products %}
        {% if product.handle %}
          {% assign all_handles = all_handles | append: product.handle | append: "," %}
        {% else %}
          {% assign all_handles = all_handles | append: product | append: "," %}
        {% endif %}
      {% endfor %}
    {% endfor %}
  {% else %}
    {% for product in quinn_media[media.key].products %}
      {% if product.handle %}
        {% assign all_handles = all_handles | append: product.handle | append: "," %}
      {% else %}
        {% assign all_handles = all_handles | append: product | append: "," %}
      {% endif %}
    {% endfor %}
  {% endif %}
{% endfor %}
{% for id in card_playlists_ids %}
  {% assign current_playlist = quinn_playlists[id] %}
  {% for media in current_playlist.media %}
    {% if media.type == 'group' %}
      {% for m in quinn_media_groups[media.key].media %}
        {% for product in quinn_media[m.key].products %}
          {% if product.handle %}
            {% assign all_handles = all_handles | append: product.handle | append: "," %}
          {% else %}
            {% assign all_handles = all_handles | append: product | append: "," %}
          {% endif %}
        {% endfor %}
      {% endfor %}
    {% else %}
      {% for product in quinn_media[media.key].products %}
        {% if product.handle %}
          {% assign all_handles = all_handles | append: product.handle | append: "," %}
        {% else %}
          {% assign all_handles = all_handles | append: product | append: "," %}
        {% endif %}
      {% endfor %}
    {% endif %}
  {% endfor %}
{% endfor %}
{% assign all_handles = all_handles | split: ',' %}
<script>
  var all_products = {};
  if (Quinn.debug_logs) console.log("pre-rendering", {{quinn_playlists | json}});
  function render_playlist(playlist, settings) {
    if (!settings) return;
    function get_medias(medias) {
      return medias.map(media => {
        if (media.group?.length === 0) return null;
        if (media.group?.length) {
          const m = get_medias(media.group);
          return m.length ? {group: m} : null;
        }
        return media.products.length ? media : null;
      }).filter(m => m);
    }
    playlist.medias = get_medias(playlist.medias);
    const props = {
      playlist,
      settings
    }
    if (Quinn.debug_logs) console.log("rendering", props);
    const quinnappinterval = setInterval(() => {
      const QuinnRenderer = props.playlist.type === "floating" ? Quinn.renderFloatingWidget : Quinn.renderAppBlock;
      if(QuinnRenderer) {
        clearInterval(quinnappinterval)
        QuinnRenderer(props);
      }
    }, 100)
  };
  function getMediaProducts(media) {
    if (!media) return [];
    return media.products.map(p => p.handle ? ({ ...p, product: all_products[p.handle] }) : ({ variant_id: null, product: all_products[p] })).filter(p => p.product);
  }
</script>
{% paginate collections.quinn-app-products.products by 1000 %}
  {% for product_object in collections.quinn-app-products.products %}
    {% if all_handles contains product_object.handle %}
      {% assign product_id = product_object.id %}
      {% assign product_handle = product_object.handle %}
      {% assign product_options = product_object.options_with_values %}
      {% assign color_options = '' | split: '' %}
      {% for option in product_options %}
        {% if option.name == 'Shade' or option.name == 'Color' %}
          {% assign values = option.values %}
          {% for value in values %}
            {% assign color_image = value | handle | append: '.png' | file_img_url: '50x50' | prepend: 'https:' | split: '?' | first | split: "random_string_djhsdhsjdh" %}
            {% assign color_options = color_options | concat: color_image %}
          {% endfor %}
        {% endif %}
      {% endfor %}
      <script>
        all_products[{{ product_handle | json }}] = {
          ...{{ product_object | json }},
          variants: [
            {% for variant in product_object.variants %}
              {
                ...{{ variant | json }},
                price: {{ variant.price | money_without_currency | prepend: cart.currency.symbol | json }}.replace(/<\/?span[^>]*>/g, ""),
                compare_at_price: {{ variant.compare_at_price| money_without_currency | prepend: cart.currency.symbol | json }}.replace(/<\/?span[^>]*>/g, ""),
                featured_image_large: {{ variant.featured_image | img_url: '150x150' | json }},
                featured_image_small: {{ variant.featured_image | img_url: '64x64' | json }},
                inventory_quantity: {{ variant.inventory_quantity | json }},
                quinn_description: {{ variant.metafields.quinn.description.value | json }},
              },
            {% endfor %}
          ],
          media: [
            {% for med in product_object.media %}
              {
                ...{{ med | json }},
                featured_image_large: {{ med.src | img_url: '150x150' | json }},
                featured_image_small: {{ med.src | img_url: '64x64' | json }},
                featured_image_xl: {{ med.src | img_url: '360x360' | json }},
              },
            {% endfor %}
          ],
          price: {{ product_object.price | money_without_currency | prepend: cart.currency.symbol | json }}.replace(/<\/?span[^>]*>/g, ""),
          compare_at_price: {{ product_object.compare_at_price| money_without_currency | prepend: cart.currency.symbol | json }}.replace(/<\/?span[^>]*>/g, ""),
          featured_image_large: {{ product_object.featured_image | img_url: '150x150' | json }},
          featured_image_small: {{ product_object.featured_image | img_url: '64x64' | json }},
          options_with_values: {{ product_object.options_with_values | json }},
          color_options: {{ color_options | json }},
          quinn_description: {{ product_object.metafields.quinn.description.value | json }},
          reviews: {
            judgeme: {{ product_object.metafields.judgeme.widget | json }},
            loox: {
              avg_rating: {{ product_object.metafields.loox.avg_rating | json }},
              num_reviews: {{ product_object.metafields.loox.num_reviews | json }},
              reviews: `{{ product_object.metafields.loox.reviews }}`,
            },
            stamped: {{ product_object.metafields.stamped | json }},
            yotpo: {{ product_object.metafields.yotpo_reviews['1000'] | json }},
            ds: {{ product_object.metafields.get_reviews | json }},
            spr: {
              rating: '{{ product_object.metafields.reviews.rating }}',
              rating_count: {{ product_object.metafields.reviews.rating_count | json }},
            },
          },
      }
      </script>
    {% endif %}
  {% endfor %}
{% endpaginate %}
{% capture snippet_content %}{% render 'quinn-custom' %}{% endcapture %}
{% if snippet_content contains "Could not find asset" %}
    {% comment %} do nothing {% endcomment %}
{% else %}
    {% render 'quinn-custom' all_handles: all_handles, story_playlist: story_playlist, card_playlist: card_playlist %}
{% endif %}
<script>
const story_playlist = {{ story_playlist | json }};
if (story_playlist) {
  const story_playlist_data = {
    ...story_playlist,
    banner_image: {{ story_playlist.banner_image | file_url | json }},
    medias: [
      {% for media in story_playlist.media %}
        {% if media.hidden %}
          {% continue %}
        {% endif %}
        {% if media.type == 'group' %}
          {
            group: [
              {% for m in quinn_media_groups[media.key].media %}
                {
                  ...{{ quinn_media[m.key] | json }},
                  filename: {{ quinn_media[m.key].filename  | json }},
                  products: getMediaProducts({{ quinn_media[m.key] | json }}),
                  url: {
                    {% for quality in quinn_media[m.key].quality %}
                      '{{ quality }}': {{ m.key | prepend: prepend_url | append: '_' | append: quality | append: '.mp4' | file_url | json }},
                    {% endfor %}
                      short: {{ m.key | prepend: prepend_url | append: '_card_thumbnail.mp4' | file_url | json }},
                      thumbnail: {{ m.key | prepend: prepend_url | append: '_story_thumbnail.jpg' | file_url | json }},
                      poster: {{ m.key | prepend: prepend_url | append: '_poster.jpg' | file_url | json }},
                  },
                },
              {% endfor %}
            ]
          },
        {% else %}
          {
            ...{{ quinn_media[media.key] | json }},
            products: getMediaProducts({{ quinn_media[media.key] | json }}),
            filename: {{ quinn_media[media.key].filename | json }},
            url: {
              {% for quality in quinn_media[media.key].quality %}
                '{{ quality }}': {{ media.key | prepend: prepend_url | append: '_' | append: quality | append: '.mp4' | file_url | json }},
              {% endfor %}
                short: {{ media.key | prepend: prepend_url | append: '_card_thumbnail.mp4' | file_url | json }},
                thumbnail: {{ media.key | prepend: prepend_url | append: '_story_thumbnail.jpg' | file_url | json }},
                poster: {{ media.key | prepend: prepend_url | append: '_poster.jpg' | file_url | json }},
            },
          },
        {% endif %}
      {% endfor %}
    ]
  };
  render_playlist(story_playlist_data, {{ settings | json }});
}
</script>
{% for id in card_playlists_ids %}
{% assign card_playlist = quinn_playlists[id] %}
<script type="module">
    const card_playlist = {{ card_playlist | json }};
    const card_playlist_data = {
      ...card_playlist,
      banner_image: {{ card_playlist.banner_image | file_url | json }},
      medias: [
        {% for media in card_playlist.media %}
          {% if media.hidden %}
            {% continue %}
          {% endif %}
          {% if media.type == 'group' %}
            {
              group: [
                {% for m in quinn_media_groups[media.key].media %}
                  {
                    ...{{ quinn_media[m.key] | json }},
                    filename: {{ quinn_media[m.key].filename | json }},
                    products: getMediaProducts({{ quinn_media[m.key] | json }}),
                    url: {
                      {% for quality in quinn_media[m.key].quality %}
                        '{{ quality }}': {{ m.key | prepend: prepend_url | append: '_' | append: quality | append: '.mp4' | file_url | json }},
                      {% endfor %}
                        short: {{ m.key | prepend: prepend_url | append: '_card_thumbnail.mp4' | file_url | json }},
                        thumbnail: {{ m.key | prepend: prepend_url | append: '_story_thumbnail.jpg' | file_url | json }},
                        poster: {{ m.key | prepend: prepend_url | append: '_poster.jpg' | file_url | json }},
                    },
                  },
                {% endfor %}
              ]
            },
          {% else %}
            {
              ...{{ quinn_media[media.key] | json }},
              products: getMediaProducts({{ quinn_media[media.key] | json }}),
              filename: {{ quinn_media[media.key].filename | json }},
              url: {
                {% for quality in quinn_media[media.key].quality %}
                  '{{ quality }}': {{ media.key | prepend: prepend_url | append: '_' | append: quality | append: '.mp4' | file_url | json }},
                {% endfor %}
                  short: {{ media.key | prepend: prepend_url | append: '_card_thumbnail.mp4' | file_url | json }},
                  thumbnail: {{ media.key | prepend: prepend_url | append: '_story_thumbnail.jpg' | file_url | json }},
                  poster: {{ media.key | prepend: prepend_url | append: '_poster.jpg' | file_url | json }},
              },
            },
          {% endif %}
        {% endfor %}
      ]
    };
    render_playlist(card_playlist_data, {{ settings | json }});
  </script>
{% endfor %}
<script>
const floating_playlist = {{ floating_playlist | json }}
if (floating_playlist) {
  const floating_playlist_data = {
    ...floating_playlist,
    banner_image: {{ floating_playlist.banner_image | file_url | json }},
    medias: [
      {% for media in floating_playlist.media %}
        {% if media.hidden %}
          {% continue %}
        {% endif %}
        {% if media.type == 'group' %}
          {
            group: [
              {% for m in quinn_media_groups[media.key].media %}
                {
                  ...{{ quinn_media[m.key] | json }},
                  filename: {{ quinn_media[m.key].filename | json }},
                  products: getMediaProducts({{ quinn_media[m.key] | json }}),
                  url: {
                    {% for quality in quinn_media[m.key].quality %}
                      '{{ quality }}': {{ m.key | prepend: prepend_url | append: '_' | append: quality | append: '.mp4' | file_url | json }},
                    {% endfor %}
                      short: {{ m.key | prepend: prepend_url | append: '_card_thumbnail.mp4' | file_url | json }},
                      thumbnail: {{ m.key | prepend: prepend_url | append: '_story_thumbnail.jpg' | file_url | json }},
                      poster: {{ m.key | prepend: prepend_url | append: '_poster.jpg' | file_url | json }},
                  },
                },
              {% endfor %}
            ]
          },
        {% else %}
          {
            ...{{ quinn_media[media.key] | json }},
            products: getMediaProducts({{ quinn_media[media.key] | json }}),
            filename: {{ quinn_media[media.key].filename | json }},
            url: {
              {% for quality in quinn_media[media.key].quality %}
                '{{ quality }}': {{ media.key | prepend: prepend_url | append: '_' | append: quality | append: '.mp4' | file_url | json }},
              {% endfor %}
                short: {{ media.key | prepend: prepend_url | append: '_card_thumbnail.mp4' | file_url | json }},
                thumbnail: {{ media.key | prepend: prepend_url | append: '_story_thumbnail.jpg' | file_url | json }},
                poster: {{ media.key | prepend: prepend_url | append: '_poster.jpg' | file_url | json }},
            },
          },
        {% endif %}
      {% endfor %}
    ]
  };
  render_playlist(floating_playlist_data, {{ settings | json }});
}
</script>
<div id="quinn-overlay"></div>
<script>
  const quinnoverlayinterval = setInterval(() => {
    if(Quinn.renderAppOverlay) {
      Quinn.renderAppOverlay();
      clearInterval(quinnoverlayinterval)
    }
  }, 100)
</script>