<div class="button custom-prebook">
  <div class="custom-prebook-heading">Make it Personal.</div>
  <div class="custom-prebook-subheading">
    Get A Customized Engraving And Make It Unmistakibly Yours.
  </div>
</div>
<!-- Personalised Modal -->
<div class="personilaztion-message-modal-overlay"></div>
<div class="personilaztion-message-modal hide-popup">
  <div class="personilaztion-message-container">
    <div class="message-form-container">
      <div class="personalization-heading-wrapper">
        <span class="personalized-modal-close" id="close-icon">
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24">
            <path d="M23 20.168l-8.185-8.187 8.185-8.174-2.832-2.807-8.182 8.179-8.176-8.179-2.81 2.81 8.186 8.196-8.186 8.184 2.81 2.81 8.203-8.192 8.18 8.192z"/>
          </svg>
        </span>
        <span class="personalization-heading">PERSONALIZE YOUR AIRDOPES</span>
        <div class="personalization-sub-heading">It's On Us :)</div>
      </div>
      <div class="personalization-image-wrapper">
        {% if product.selected_or_first_available_variant.metafields.custom.personalised_image != blank %}
          <img src="{{ product.selected_or_first_available_variant.metafields.custom.personalised_image }}">
        {% else %}
          <img src="{{ product.selected_or_first_available_variant.featured_image | image_url }}">
        {% endif %}
        <div class="personalization-image-txt visually-hidden"></div>
      </div>
      <input
        type="text"
        id="personalized-text"
        placeholder="YOUR ENGRAVING"
        maxlength="7"
        pattern="[a-zA-Z]+"
        autocomplete="new-password"
        onkeyup="convertToUppercase()"
      >
      <p class="max-limit-reached visually-hidden">Max Limit reached</p>
      <div class="personalization-info">
        <p>Limit it to alphabets and numbers.</p>
        <p>Stay away from special Symbols. Max 12 characters.</p>
      </div>
      <button type="button" class="submit-personalization visually-hidden">CONFIRM</button>
      {% comment %} <button type="button" class="cancel-personalization personalized-modal-close">SKIP</button> {% endcomment %}
      <button type="button" class="skip-personalization" onclick="btnClick()">SKIP</button>
    </div>
  </div>
</div>
<script>
      const customPrebookBtn = document.querySelector('.custom-prebook');
      const personalizationModalOverlay = document.querySelector('.personilaztion-message-modal-overlay');
      const personalizationModal = document.querySelector('.personilaztion-message-modal');
      const personalizationModalClose = document.querySelectorAll('.personalized-modal-close');
      const personalizationSkipBtn = document.querySelectorAll('.skip-personalization');
      const personalizationSubmitBtn = document.querySelector('.submit-personalization');
      const prebookBtn = document.querySelector('#AddToCart');
      const personalizedText = document.querySelector('#personalized-text');
      const personalizedMessageOriginal = document.querySelector('#personalised_message');
      const editMessage=document.querySelector(".edit-msg");
      const msgContainer=document.querySelector(".message-form-container");
      const customHeading=document.querySelector(".custom-prebook-heading");
      const customSubHeading=document.querySelector(".custom-prebook-subheading");
      const editText=document.querySelector(".edit-red");
      const errorMsg=document.querySelector(".max-limit-reached");
      let sessionValue=sessionStorage.getItem(personalizedMessageOriginal.getAttribute("variant-id"));
      let url=window.location.href;
      //Finding line item from URL params
      const queryString = window.location.search;
      const urlParams = new URLSearchParams(queryString);
      const line_item = urlParams.get('line-item');
      const pmsg = urlParams.get('msg');
      //Input validation
      let currentInputValue = '';
      let value="";
      let str=""
      const imageText=document.querySelector(".personalization-image-txt");
      $(document).ready(function(){
        if(url.includes("&personalizenow")){
          setTimeout(() => {
            $('.custom-prebook')[0].click()
          }, 1000)
        }
      })
      
      function convertToUppercase() {
        personalizedText.value = personalizedText.value.toUpperCase();
        if(personalizedText.value.length === 7) {
          errorMsg.classList.remove('visually-hidden')
        } else {
          errorMsg.classList.add('visually-hidden')
        }
        if(personalizedText.value.length >= 1) {
          personalizationSubmitBtn.classList.remove('visually-hidden')
        } else {
          personalizationSubmitBtn.classList.add('visually-hidden')
        }
      }
      
      {% comment %} if(sessionStorage.getItem(personalizedMessageOriginal.getAttribute("variant-id"))) {
        customHeading.innerHTML=``;
        customSubHeading.innerHTML=`Your Engraving <span class="edit-red">| Edit</span> <br> ${sessionStorage.getItem(personalizedMessageOriginal.getAttribute("variant-id"))}`;
      } {% endcomment %}
    personalizedText.addEventListener('keypress', function inputKeypressHandler(e) {

      // keypress event on input box is listened here and this function is triggered
      // which key is pressed, keyPressed = e.which || e.keyCode;
      const key = e.which || e.keyCode;
      let char=String.fromCharCode(key);
      if(currentInputValue.length<7){
       if((key>=97&&key<=122||key>=55&&key<=90||key>=48&&key<=57)&&key!=64){
      currentInputValue+=char;
      personalizedText.value=currentInputValue;
      window.addEventListener("keydown",(e)=>{
      if(e.keyCode==8){
      str=personalizedText.value.slice(0,personalizedText.value.length-1);
      currentInputValue=str;
      }
      })
      }
      }
      const SPACE = 32;
      const ZERO = 48;
      const NINE = 57;
      const isNotValidDigit = key < ZERO || key > NINE;
      if (key != SPACE || ( isNotValidDigit ) ) {
          e.preventDefault();
      }
  });
      personalizedText.addEventListener("keydown",(e)=>{
        if(e.keyCode==8){
        str=personalizedText.value.slice(0,personalizedText.value.length-1);
        currentInputValue=str;
        }
      })
      personalizedText.addEventListener("keyup",()=>{
        setTimeout(()=>{
          imageText.innerHTML= currentInputValue ? `<span>${currentInputValue.toUpperCase()}</span>`: '';
          console.log(currentInputValue)
        },2000)
      })
      function openPersonalizationModal() {
          personalizationModalOverlay.classList.remove('hide')
          personalizationModal.classList.remove('hide-popup',"hide")
          document.body.classList.add('noScroll');
           if(url.includes("&personalized")){
            personalizedText.value=currentInputValue;
           }
          if(sessionStorage.getItem(personalizedMessageOriginal.getAttribute("variant-id"))) {
            personalizedText.focus()
            personalizedText.value = `${sessionStorage.getItem(personalizedMessageOriginal.getAttribute("variant-id"))}`
          }
          if(personalizedText.value.length >= 1) {
            personalizationSubmitBtn.classList.remove('visually-hidden')
          } else {
            personalizationSubmitBtn.classList.add('visually-hidden')
          }
      }
      function closePersonalizationModal() {
          personalizationModalOverlay.classList.add('hide')
          personalizationModal.classList.add('hide-popup',"hide")
          document.body.classList.remove('noScroll')
      }
      function btnClick() {
        $('#AddToCart')[0].click();
        personalizedText.value="";
        closePersonalizationModal()
      }
      {% comment %} personalizationSkipBtn.addEventListener('click', btnClick) {% endcomment %}
      
      function cartRefresh() {
          document.documentElement.dispatchEvent(new CustomEvent("cart:refresh", {

              bubbles: !0
          })), document.getElementById("mini-cart").open = !0, $(".search-clear-icon").css('display', 'flex'), setTimeout(function() {
              $(".header__cart-count").html($("#mini-cart input.cart--count").val());
              $('.header__cart-count.header__cart-count--floating.bubble-count').text($("#mini-cart input.cart--count").val());
              cart_bubble();

          }, 1500)
      }
      (()=>{

        if(!url.includes("&personalized")){
          personalizationModal.classList.add("hide-popup","hide");
          personalizationModalOverlay.classList.add("hide");
          personalizedText.value="";
        }else{
          if(pmsg){
            personalizedText.value=pmsg.toUpperCase();
            imageText.innerHTML= pmsg ? `<span>${pmsg.toUpperCase()}</span>` : '';
            currentInputValue=personalizedText.value;
            {% comment %} customHeading.innerHTML=``;
            customSubHeading.innerHTML=`Your Engraving <span class="edit-red">| Edit</span> <br> ${currentInputValue}`; {% endcomment %}
          }else{
            currentInputValue="";
          }
          personalizationModal.classList.remove("hide-popup");
          personalizationModalOverlay.classList.remove("hide");
        }
      })()
      function storePersonalizedMessage(){
      sessionValue=sessionStorage.setItem(personalizedMessageOriginal.getAttribute("variant-id"), personalizedText.value);
      personalizedText.value=sessionValue;
      }
      function updatePersonlizedMsg(){
         let formData = {
      'line': line_item,
      'properties': { 'Personalised Message': sessionStorage.getItem(personalizedMessageOriginal.getAttribute("variant-id")) }
      }
      ;

      fetch(window.Shopify.routes.root + 'cart/change.js', {
      method: 'POST',
      headers: {
      'Content-Type': 'application/json'
      },
      body: JSON.stringify(formData)
      })
      .then(response => {
      return response.json();
      })
      .then(res=>{
      cartRefresh();
      })
      .catch((error) => {
      console.error('Error:', error);
      });

      }
      customPrebookBtn.addEventListener('click', openPersonalizationModal)
      personalizationModalOverlay.addEventListener('click', closePersonalizationModal)
      personalizationModalClose.forEach((closeBtn) =>{
        closeBtn.addEventListener('click', closePersonalizationModal)
      })
      
      personalizationSubmitBtn.addEventListener('click', (e) => {
          let pMessage = personalizedText.value;
          personalizedMessageOriginal.value = pMessage.toUpperCase();
         personalizedText.value=currentInputValue;
        console.log(personalizedMessageOriginal.value)
          closePersonalizationModal()
          storePersonalizedMessage()
          {% comment %} customHeading.innerHTML=``;
          customSubHeading.innerHTML=`Your Engraving <span class="edit-red">| Edit</span> <br> ${personalizedMessageOriginal.value}`; {% endcomment %}
          if(!url.includes("&personalized")){
            btnClick()
          }else{
            updatePersonlizedMsg()
          }
          {% comment %} closePersonalizationModal() {% endcomment %}
      })
</script>
